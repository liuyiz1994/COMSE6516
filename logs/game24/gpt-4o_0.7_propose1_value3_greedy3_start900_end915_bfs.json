[
    {
        "steps": [
            {
                "step": 0,
                "x": "4 5 6 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 6 9 10)  \n",
                    "5 + 6 = 11 (left: 4 10 11)  \n",
                    "6 + 4 = 10 (left: 5 10 10)  \n",
                    "10 - 4 = 6 (left: 5 6 6)  \n",
                    "10 - 5 = 5 (left: 4 5 6)  \n",
                    "10 - 6 = 4 (left: 4 4 5)  \n",
                    "10 / 5 = 2 (left: 4 6 2)  \n",
                    "10 / 2 = 5 (left: 4 5 6)  \n",
                    "5 * 4 = 20 (left: 6 10 20)  \n",
                    "5 * 6 = 30 (left: 4 10 30)  \n",
                    "6 * 4 = 24 (left: 5 10 24)  \n",
                    "6 - 4 = 2 (left: 5 10 2)  \n",
                    "6 - 5 = 1 (left: 4 10 1)  \n",
                    "5 - 4 = 1 (left: 6 10 1)\n"
                ],
                "values": [
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    20.001,
                    0.0,
                    1.0,
                    0.0
                ],
                "select_new_ys": [
                    "6 * 4 = 24 (left: 5 10 24)  \n",
                    "4 + 5 = 9 (left: 6 9 10)  \n",
                    "10 - 6 = 4 (left: 4 4 5)  \n"
                ]
            },
            {
                "step": 1,
                "x": "4 5 6 10",
                "ys": [
                    "6 * 4 = 24 (left: 5 10 24)  \n",
                    "4 + 5 = 9 (left: 6 9 10)  \n",
                    "10 - 6 = 4 (left: 4 4 5)  \n"
                ],
                "new_ys": [
                    "6 * 4 = 24 (left: 5 10 24)  \n5 + 10 = 15 (left: 15 24)\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n10 + 5 = 15 (left: 15 24)\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n24 + 5 = 29 (left: 10 29)\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n24 + 10 = 34 (left: 5 34)\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n5 * 10 = 50 (left: 24 50)\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n24 * 5 = 120 (left: 10 120)\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n24 * 10 = 240 (left: 5 240)\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n10 - 5 = 5 (left: 5 24)\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n24 - 5 = 19 (left: 10 19)\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n24 - 10 = 14 (left: 5 14)\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n10 / 5 = 2 (left: 5 2 24)\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n24 / 5 = 4.8 (left: 10 4.8)\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n24 / 10 = 2.4 (left: 5 2.4)\n",
                    "4 + 5 = 9 (left: 6 9 10)  \n6 + 9 = 15 (left: 10 15)\n",
                    "4 + 5 = 9 (left: 6 9 10)  \n6 * 9 = 54 (left: 10 54)\n",
                    "4 + 5 = 9 (left: 6 9 10)  \n9 - 6 = 3 (left: 3 10)\n",
                    "4 + 5 = 9 (left: 6 9 10)  \n10 - 6 = 4 (left: 4 9)\n",
                    "4 + 5 = 9 (left: 6 9 10)  \n10 + 9 = 19 (left: 6 19)\n",
                    "4 + 5 = 9 (left: 6 9 10)  \n10 - 9 = 1 (left: 1 6)\n",
                    "4 + 5 = 9 (left: 6 9 10)  \n9 / 3 = 3 (left: 3 10)\n",
                    "4 + 5 = 9 (left: 6 9 10)  \n10 / 2 = 5 (left: 5 9)\n",
                    "10 - 6 = 4 (left: 4 4 5)  \n4 + 4 = 8 (left: 5 8)\n",
                    "10 - 6 = 4 (left: 4 4 5)  \n4 + 5 = 9 (left: 4 9)\n",
                    "10 - 6 = 4 (left: 4 4 5)  \n4 * 5 = 20 (left: 4 20)\n",
                    "10 - 6 = 4 (left: 4 4 5)  \n5 - 4 = 1 (left: 4 1)\n",
                    "10 - 6 = 4 (left: 4 4 5)  \n5 / 4 = 1.25 (left: 4 1.25)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    20.0,
                    0.002,
                    0.001,
                    0.0,
                    0.0,
                    0.001,
                    60.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.001,
                    0.001,
                    40.0,
                    0.002,
                    0.0
                ],
                "select_new_ys": [
                    "6 * 4 = 24 (left: 5 10 24)  \n10 / 5 = 2 (left: 5 2 24)\n",
                    "10 - 6 = 4 (left: 4 4 5)  \n4 * 5 = 20 (left: 4 20)\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n5 * 10 = 50 (left: 24 50)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 5 6 10",
                "ys": [
                    "6 * 4 = 24 (left: 5 10 24)  \n10 / 5 = 2 (left: 5 2 24)\n",
                    "10 - 6 = 4 (left: 4 4 5)  \n4 * 5 = 20 (left: 4 20)\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n5 * 10 = 50 (left: 24 50)\n"
                ],
                "new_ys": [
                    "6 * 4 = 24 (left: 5 10 24)  \n10 / 5 = 2 (left: 5 2 24)\n5 * 2 = 10 (left: 10 24)\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n10 / 5 = 2 (left: 5 2 24)\n24 / 2 = 12 (left: 5 12)\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n10 / 5 = 2 (left: 5 2 24)\n24 - 5 = 19 (left: 2 19)\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n10 / 5 = 2 (left: 5 2 24)\n24 - 2 = 22 (left: 5 22)\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n10 / 5 = 2 (left: 5 2 24)\n24 / 5 = 4.8 (left: 2 4.8)\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n10 / 5 = 2 (left: 5 2 24)\n5 + 2 = 7 (left: 7 24)\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n10 / 5 = 2 (left: 5 2 24)\n24 + 5 = 29 (left: 2 29)\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n10 / 5 = 2 (left: 5 2 24)\n24 + 2 = 26 (left: 5 26)\n",
                    "10 - 6 = 4 (left: 4 4 5)  \n4 * 5 = 20 (left: 4 20)\n4 + 20 = 24 (left: 24)\n",
                    "10 - 6 = 4 (left: 4 4 5)  \n4 * 5 = 20 (left: 4 20)\n20 - 4 = 16 (left: 16)\n",
                    "10 - 6 = 4 (left: 4 4 5)  \n4 * 5 = 20 (left: 4 20)\n20 / 4 = 5 (left: 5)\n",
                    "10 - 6 = 4 (left: 4 4 5)  \n4 * 5 = 20 (left: 4 20)\n4 * 20 = 80 (left: 80)\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n5 * 10 = 50 (left: 24 50)\n24 + 50 = 74 (left: 74)\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n5 * 10 = 50 (left: 24 50)\n50 - 24 = 26 (left: 26)\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n5 * 10 = 50 (left: 24 50)\n50 / 24 = 2.083 (left: 2.083)\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n5 * 10 = 50 (left: 24 50)\n24 * 50 = 1200 (left: 1200)\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n5 * 10 = 50 (left: 24 50)\n50 + 24 = 74 (left: 74)\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n5 * 10 = 50 (left: 24 50)\n24 - 50 = -26 (left: -26)\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n5 * 10 = 50 (left: 24 50)\n24 / 50 = 0.48 (left: 0.48)\n"
                ],
                "values": [
                    0.002,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.001,
                    0.0,
                    0.002,
                    60.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "10 - 6 = 4 (left: 4 4 5)  \n4 * 5 = 20 (left: 4 20)\n4 + 20 = 24 (left: 24)\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n10 / 5 = 2 (left: 5 2 24)\n5 * 2 = 10 (left: 10 24)\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n10 / 5 = 2 (left: 5 2 24)\n24 + 2 = 26 (left: 5 26)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 5 6 10",
                "ys": [
                    "10 - 6 = 4 (left: 4 4 5)  \n4 * 5 = 20 (left: 4 20)\n4 + 20 = 24 (left: 24)\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n10 / 5 = 2 (left: 5 2 24)\n5 * 2 = 10 (left: 10 24)\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n10 / 5 = 2 (left: 5 2 24)\n24 + 2 = 26 (left: 5 26)\n"
                ],
                "new_ys": [
                    "10 - 6 = 4 (left: 4 4 5)  \n4 * 5 = 20 (left: 4 20)\n4 + 20 = 24 (left: 24)\nAnswer: ((10 - 6) * 5) + 4 = 24\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n10 / 5 = 2 (left: 5 2 24)\n5 * 2 = 10 (left: 10 24)\n10 + 24 = 34 (left: 34)\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n10 / 5 = 2 (left: 5 2 24)\n5 * 2 = 10 (left: 10 24)\n24 - 10 = 14 (left: 10 14)\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n10 / 5 = 2 (left: 5 2 24)\n5 * 2 = 10 (left: 10 24)\n24 / 10 = 2.4 (left: 10 2.4)\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n10 / 5 = 2 (left: 5 2 24)\n5 * 2 = 10 (left: 10 24)\n24 * 10 = 240 (left: 240)\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n10 / 5 = 2 (left: 5 2 24)\n5 * 2 = 10 (left: 10 24)\n24 - 10 = 14 (left: 14 10)\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n10 / 5 = 2 (left: 5 2 24)\n24 + 2 = 26 (left: 5 26)\n5 + 26 = 31 (left: 31)\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n10 / 5 = 2 (left: 5 2 24)\n24 + 2 = 26 (left: 5 26)\n26 - 5 = 21 (left: 21)\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n10 / 5 = 2 (left: 5 2 24)\n24 + 2 = 26 (left: 5 26)\n26 / 5 = 5.2 (left: 5.2)\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n10 / 5 = 2 (left: 5 2 24)\n24 + 2 = 26 (left: 5 26)\n5 * 26 = 130 (left: 130)\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n10 / 5 = 2 (left: 5 2 24)\n24 + 2 = 26 (left: 5 26)\n26 + 5 = 31 (left: 31)\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n10 / 5 = 2 (left: 5 2 24)\n24 + 2 = 26 (left: 5 26)\n5 - 26 = -21 (left: -21)\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n10 / 5 = 2 (left: 5 2 24)\n24 + 2 = 26 (left: 5 26)\n26 / 5 = 5.2 (left: 5.2)\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n10 / 5 = 2 (left: 5 2 24)\n24 + 2 = 26 (left: 5 26)\n5 * 26 = 130 (left: 130)\n"
                ],
                "values": [
                    60.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "10 - 6 = 4 (left: 4 4 5)  \n4 * 5 = 20 (left: 4 20)\n4 + 20 = 24 (left: 24)\nAnswer: ((10 - 6) * 5) + 4 = 24\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n10 / 5 = 2 (left: 5 2 24)\n5 * 2 = 10 (left: 10 24)\n10 + 24 = 34 (left: 34)\n",
                    "6 * 4 = 24 (left: 5 10 24)  \n10 / 5 = 2 (left: 5 2 24)\n5 * 2 = 10 (left: 10 24)\n24 - 10 = 14 (left: 10 14)\n"
                ]
            }
        ],
        "total_time": 237.75627303123474,
        "generate_time": 19.169435024261475,
        "evaluate_time": 218.57735776901245,
        "num_of_generations": 10,
        "num_of_evaluations": 73,
        "num_of_steps": 4,
        "idx": 900,
        "ys": [
            "10 - 6 = 4 (left: 4 4 5)  \n4 * 5 = 20 (left: 4 20)\n4 + 20 = 24 (left: 24)\nAnswer: ((10 - 6) * 5) + 4 = 24\n",
            "6 * 4 = 24 (left: 5 10 24)  \n10 / 5 = 2 (left: 5 2 24)\n5 * 2 = 10 (left: 10 24)\n10 + 24 = 34 (left: 34)\n",
            "6 * 4 = 24 (left: 5 10 24)  \n10 / 5 = 2 (left: 5 2 24)\n5 * 2 = 10 (left: 10 24)\n24 - 10 = 14 (left: 10 14)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 40607,
            "prompt_tokens": 25949,
            "cost": 0.4709425
        },
        "sum(accs)": 1,
        "cnt_avg": 0.3333333333333333,
        "cnt_any": 1
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 2 4 7",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 2 = 3 (left: 3 4 7)  \n",
                    "2 + 4 = 6 (left: 1 6 7)  \n",
                    "4 + 7 = 11 (left: 1 2 11)  \n",
                    "7 - 1 = 6 (left: 2 4 6)  \n",
                    "7 - 2 = 5 (left: 1 4 5)  \n",
                    "7 - 4 = 3 (left: 1 2 3)  \n",
                    "4 - 2 = 2 (left: 1 2 7)  \n",
                    "7 / 1 = 7 (left: 2 4 7)  \n",
                    "4 / 2 = 2 (left: 1 2 7)  \n",
                    "2 * 1 = 2 (left: 2 4 7)  \n",
                    "4 * 1 = 4 (left: 2 4 7)  \n",
                    "7 * 1 = 7 (left: 2 4 7)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.001,
                    0.002,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "7 - 2 = 5 (left: 1 4 5)  \n",
                    "7 - 4 = 3 (left: 1 2 3)  \n",
                    "1 + 2 = 3 (left: 3 4 7)  \n"
                ]
            },
            {
                "step": 1,
                "x": "1 2 4 7",
                "ys": [
                    "7 - 2 = 5 (left: 1 4 5)  \n",
                    "7 - 4 = 3 (left: 1 2 3)  \n",
                    "1 + 2 = 3 (left: 3 4 7)  \n"
                ],
                "new_ys": [
                    "7 - 2 = 5 (left: 1 4 5)  \n1 + 4 = 5 (left: 5 5)\n",
                    "7 - 2 = 5 (left: 1 4 5)  \n4 + 1 = 5 (left: 5 5)\n",
                    "7 - 2 = 5 (left: 1 4 5)  \n5 + 1 = 6 (left: 4 6)\n",
                    "7 - 2 = 5 (left: 1 4 5)  \n5 + 4 = 9 (left: 1 9)\n",
                    "7 - 2 = 5 (left: 1 4 5)  \n1 * 4 = 4 (left: 4 5)\n",
                    "7 - 2 = 5 (left: 1 4 5)  \n1 * 5 = 5 (left: 4 5)\n",
                    "7 - 2 = 5 (left: 1 4 5)  \n4 * 5 = 20 (left: 1 20)\n",
                    "7 - 2 = 5 (left: 1 4 5)  \n4 - 1 = 3 (left: 3 5)\n",
                    "7 - 2 = 5 (left: 1 4 5)  \n5 - 1 = 4 (left: 4 4)\n",
                    "7 - 2 = 5 (left: 1 4 5)  \n5 - 4 = 1 (left: 1 1)\n",
                    "7 - 2 = 5 (left: 1 4 5)  \n5 / 1 = 5 (left: 4 5)\n",
                    "7 - 2 = 5 (left: 1 4 5)  \n4 / 1 = 4 (left: 4 5)\n",
                    "7 - 4 = 3 (left: 1 2 3)  \n1 + 2 = 3 (left: 3 3)\n",
                    "7 - 4 = 3 (left: 1 2 3)  \n2 + 3 = 5 (left: 1 5)\n",
                    "7 - 4 = 3 (left: 1 2 3)  \n3 + 1 = 4 (left: 2 4)\n",
                    "7 - 4 = 3 (left: 1 2 3)  \n3 - 1 = 2 (left: 2 2)\n",
                    "7 - 4 = 3 (left: 1 2 3)  \n3 - 2 = 1 (left: 1 1)\n",
                    "7 - 4 = 3 (left: 1 2 3)  \n3 - 1 = 2 (left: 2 2)\n",
                    "7 - 4 = 3 (left: 1 2 3)  \n3 * 1 = 3 (left: 2 3)\n",
                    "7 - 4 = 3 (left: 1 2 3)  \n3 * 2 = 6 (left: 1 6)\n",
                    "7 - 4 = 3 (left: 1 2 3)  \n2 * 1 = 2 (left: 2 3)\n",
                    "7 - 4 = 3 (left: 1 2 3)  \n3 / 1 = 3 (left: 2 3)\n",
                    "7 - 4 = 3 (left: 1 2 3)  \n3 / 3 = 1 (left: 1 2)\n",
                    "7 - 4 = 3 (left: 1 2 3)  \n2 / 1 = 2 (left: 2 3)\n",
                    "1 + 2 = 3 (left: 3 4 7)  \n3 + 4 = 7 (left: 7 7)\n",
                    "1 + 2 = 3 (left: 3 4 7)  \n4 + 7 = 11 (left: 3 11)\n",
                    "1 + 2 = 3 (left: 3 4 7)  \n7 - 3 = 4 (left: 4 4)\n",
                    "1 + 2 = 3 (left: 3 4 7)  \n7 - 4 = 3 (left: 3 3)\n",
                    "1 + 2 = 3 (left: 3 4 7)  \n4 - 3 = 1 (left: 1 7)\n",
                    "1 + 2 = 3 (left: 3 4 7)  \n7 / 7 = 1 (left: 3 4 1)\n",
                    "1 + 2 = 3 (left: 3 4 7)  \n7 / 3 = 2.33 (left: 4 2.33)\n",
                    "1 + 2 = 3 (left: 3 4 7)  \n7 / 4 = 1.75 (left: 3 1.75)\n",
                    "1 + 2 = 3 (left: 3 4 7)  \n4 / 3 = 1.33 (left: 7 1.33)\n",
                    "1 + 2 = 3 (left: 3 4 7)  \n3 * 4 = 12 (left: 7 12)\n",
                    "1 + 2 = 3 (left: 3 4 7)  \n3 * 7 = 21 (left: 4 21)\n",
                    "1 + 2 = 3 (left: 3 4 7)  \n4 * 7 = 28 (left: 3 28)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    60.0,
                    0.002,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.001,
                    0.001,
                    0.0,
                    0.0,
                    0.001,
                    0.002,
                    0.002,
                    0.0,
                    0.001,
                    0,
                    0.002,
                    0.001,
                    0.002,
                    0.002,
                    0.003,
                    0.002,
                    0.0,
                    0.0,
                    0.001,
                    0.001,
                    0.002,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.001,
                    0.0
                ],
                "select_new_ys": [
                    "7 - 2 = 5 (left: 1 4 5)  \n5 + 1 = 6 (left: 4 6)\n",
                    "1 + 2 = 3 (left: 3 4 7)  \n3 * 4 = 12 (left: 7 12)\n",
                    "7 - 4 = 3 (left: 1 2 3)  \n3 / 3 = 1 (left: 1 2)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 2 4 7",
                "ys": [
                    "7 - 2 = 5 (left: 1 4 5)  \n5 + 1 = 6 (left: 4 6)\n",
                    "1 + 2 = 3 (left: 3 4 7)  \n3 * 4 = 12 (left: 7 12)\n",
                    "7 - 4 = 3 (left: 1 2 3)  \n3 / 3 = 1 (left: 1 2)\n"
                ],
                "new_ys": [
                    "7 - 2 = 5 (left: 1 4 5)  \n5 + 1 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "7 - 2 = 5 (left: 1 4 5)  \n5 + 1 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "7 - 2 = 5 (left: 1 4 5)  \n5 + 1 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)\n",
                    "7 - 2 = 5 (left: 1 4 5)  \n5 + 1 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "7 - 2 = 5 (left: 1 4 5)  \n5 + 1 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)\n",
                    "7 - 2 = 5 (left: 1 4 5)  \n5 + 1 = 6 (left: 4 6)\n4 - 6 = -2 (left: -2)\n",
                    "1 + 2 = 3 (left: 3 4 7)  \n3 * 4 = 12 (left: 7 12)\n7 + 12 = 19 (left: 19)\n",
                    "1 + 2 = 3 (left: 3 4 7)  \n3 * 4 = 12 (left: 7 12)\n12 - 7 = 5 (left: 5)\n",
                    "1 + 2 = 3 (left: 3 4 7)  \n3 * 4 = 12 (left: 7 12)\n12 / 7 = 1.71 (left: 1.71)\n",
                    "1 + 2 = 3 (left: 3 4 7)  \n3 * 4 = 12 (left: 7 12)\n12 * 7 = 84 (left: 84)\n",
                    "7 - 4 = 3 (left: 1 2 3)  \n3 / 3 = 1 (left: 1 2)\n1 + 2 = 3 (left: 3)\n",
                    "7 - 4 = 3 (left: 1 2 3)  \n3 / 3 = 1 (left: 1 2)\n2 - 1 = 1 (left: 1)\n",
                    "7 - 4 = 3 (left: 1 2 3)  \n3 / 3 = 1 (left: 1 2)\n1 * 2 = 2 (left: 2)\n",
                    "7 - 4 = 3 (left: 1 2 3)  \n3 / 3 = 1 (left: 1 2)\n2 / 1 = 2 (left: 2)\n"
                ],
                "values": [
                    0.002,
                    0.0,
                    0.0,
                    60.0,
                    0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "7 - 2 = 5 (left: 1 4 5)  \n5 + 1 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "7 - 2 = 5 (left: 1 4 5)  \n5 + 1 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "1 + 2 = 3 (left: 3 4 7)  \n3 * 4 = 12 (left: 7 12)\n7 + 12 = 19 (left: 19)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 2 4 7",
                "ys": [
                    "7 - 2 = 5 (left: 1 4 5)  \n5 + 1 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "7 - 2 = 5 (left: 1 4 5)  \n5 + 1 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "1 + 2 = 3 (left: 3 4 7)  \n3 * 4 = 12 (left: 7 12)\n7 + 12 = 19 (left: 19)\n"
                ],
                "new_ys": [
                    "7 - 2 = 5 (left: 1 4 5)  \n5 + 1 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (7 - 2 + 1) * 4 = 24\n",
                    "7 - 2 = 5 (left: 1 4 5)  \n5 + 1 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\nNo possible next steps.\n",
                    "1 + 2 = 3 (left: 3 4 7)  \n3 * 4 = 12 (left: 7 12)\n7 + 12 = 19 (left: 19)\nNo further steps possible. (left: 19)\n"
                ],
                "values": [
                    60.0,
                    0,
                    0.001
                ],
                "select_new_ys": [
                    "7 - 2 = 5 (left: 1 4 5)  \n5 + 1 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (7 - 2 + 1) * 4 = 24\n",
                    "1 + 2 = 3 (left: 3 4 7)  \n3 * 4 = 12 (left: 7 12)\n7 + 12 = 19 (left: 19)\nNo further steps possible. (left: 19)\n",
                    "7 - 2 = 5 (left: 1 4 5)  \n5 + 1 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\nNo possible next steps.\n"
                ]
            }
        ],
        "total_time": 132.82915353775024,
        "generate_time": 15.90843415260315,
        "evaluate_time": 116.91392493247986,
        "num_of_generations": 10,
        "num_of_evaluations": 65,
        "num_of_steps": 4,
        "idx": 901,
        "ys": [
            "7 - 2 = 5 (left: 1 4 5)  \n5 + 1 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (7 - 2 + 1) * 4 = 24\n",
            "1 + 2 = 3 (left: 3 4 7)  \n3 * 4 = 12 (left: 7 12)\n7 + 12 = 19 (left: 19)\nNo further steps possible. (left: 19)\n",
            "7 - 2 = 5 (left: 1 4 5)  \n5 + 1 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\nNo possible next steps.\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 61906,
            "prompt_tokens": 43788,
            "cost": 0.72853
        },
        "sum(accs)": 1,
        "cnt_avg": 0.6666666666666666,
        "cnt_any": 2
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 5 8 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 5 = 7 (left: 7 8 11)  \n",
                    "2 + 8 = 10 (left: 5 10 11)  \n",
                    "2 + 11 = 13 (left: 5 8 13)  \n",
                    "5 + 8 = 13 (left: 2 11 13)  \n",
                    "5 + 11 = 16 (left: 2 8 16)  \n",
                    "8 + 11 = 19 (left: 2 5 19)  \n",
                    "2 * 5 = 10 (left: 8 10 11)  \n",
                    "2 * 8 = 16 (left: 5 11 16)  \n",
                    "2 * 11 = 22 (left: 5 8 22)  \n",
                    "5 * 8 = 40 (left: 2 11 40)  \n",
                    "5 * 11 = 55 (left: 2 8 55)  \n",
                    "8 * 11 = 88 (left: 2 5 88)  \n",
                    "5 - 2 = 3 (left: 3 8 11)  \n",
                    "8 - 2 = 6 (left: 5 6 11)  \n",
                    "11 - 2 = 9 (left: 5 8 9)  \n",
                    "8 - 5 = 3 (left: 2 3 11)  \n",
                    "11 - 5 = 6 (left: 2 8 6)  \n",
                    "11 - 8 = 3 (left: 2 5 3)  \n",
                    "8 / 2 = 4 (left: 5 4 11)  \n",
                    "11 / 2 = 5.5 (left: 5 8 5.5)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "8 - 2 = 6 (left: 5 6 11)  \n",
                    "2 + 5 = 7 (left: 7 8 11)  \n",
                    "2 + 8 = 10 (left: 5 10 11)  \n"
                ]
            },
            {
                "step": 1,
                "x": "2 5 8 11",
                "ys": [
                    "8 - 2 = 6 (left: 5 6 11)  \n",
                    "2 + 5 = 7 (left: 7 8 11)  \n",
                    "2 + 8 = 10 (left: 5 10 11)  \n"
                ],
                "new_ys": [
                    "8 - 2 = 6 (left: 5 6 11)  \n5 + 6 = 11 (left: 11 11)\n",
                    "8 - 2 = 6 (left: 5 6 11)  \n6 + 5 = 11 (left: 11 11)\n",
                    "8 - 2 = 6 (left: 5 6 11)  \n11 - 6 = 5 (left: 5 5)\n",
                    "8 - 2 = 6 (left: 5 6 11)  \n11 - 5 = 6 (left: 6 6)\n",
                    "8 - 2 = 6 (left: 5 6 11)  \n11 + 5 = 16 (left: 6 16)\n",
                    "8 - 2 = 6 (left: 5 6 11)  \n11 + 6 = 17 (left: 5 17)\n",
                    "8 - 2 = 6 (left: 5 6 11)  \n11 / 5 = 2.2 (left: 6 2.2)\n",
                    "8 - 2 = 6 (left: 5 6 11)  \n11 / 6 = 1.8333 (left: 5 1.8333)\n",
                    "8 - 2 = 6 (left: 5 6 11)  \n6 - 5 = 1 (left: 1 11)\n",
                    "8 - 2 = 6 (left: 5 6 11)  \n11 * 5 = 55 (left: 6 55)\n",
                    "8 - 2 = 6 (left: 5 6 11)  \n11 * 6 = 66 (left: 5 66)\n",
                    "8 - 2 = 6 (left: 5 6 11)  \n5 * 6 = 30 (left: 11 30)\n",
                    "8 - 2 = 6 (left: 5 6 11)  \n5 - 6 = -1 (left: -1 11)\n",
                    "2 + 5 = 7 (left: 7 8 11)  \n7 + 8 = 15 (left: 11 15)\n",
                    "2 + 5 = 7 (left: 7 8 11)  \n8 + 11 = 19 (left: 7 19)\n",
                    "2 + 5 = 7 (left: 7 8 11)  \n11 + 7 = 18 (left: 8 18)\n",
                    "2 + 5 = 7 (left: 7 8 11)  \n7 * 8 = 56 (left: 11 56)\n",
                    "2 + 5 = 7 (left: 7 8 11)  \n8 * 11 = 88 (left: 7 88)\n",
                    "2 + 5 = 7 (left: 7 8 11)  \n11 * 7 = 77 (left: 8 77)\n",
                    "2 + 5 = 7 (left: 7 8 11)  \n8 - 7 = 1 (left: 1 11)\n",
                    "2 + 5 = 7 (left: 7 8 11)  \n11 - 8 = 3 (left: 7 3)\n",
                    "2 + 5 = 7 (left: 7 8 11)  \n11 - 7 = 4 (left: 8 4)\n",
                    "2 + 5 = 7 (left: 7 8 11)  \n8 / 7 = 1.14 (left: 11 1.14)\n",
                    "2 + 5 = 7 (left: 7 8 11)  \n11 / 8 = 1.375 (left: 7 1.375)\n",
                    "2 + 5 = 7 (left: 7 8 11)  \n11 / 7 = 1.57 (left: 8 1.57)\n",
                    "2 + 5 = 7 (left: 7 8 11)  \n7 / 8 = 0.875 (left: 11 0.875)\n",
                    "2 + 8 = 10 (left: 5 10 11)  \n5 + 10 = 15 (left: 11 15)\n",
                    "2 + 8 = 10 (left: 5 10 11)  \n10 - 5 = 5 (left: 5 11)\n",
                    "2 + 8 = 10 (left: 5 10 11)  \n11 - 5 = 6 (left: 6 10)\n",
                    "2 + 8 = 10 (left: 5 10 11)  \n10 + 11 = 21 (left: 5 21)\n",
                    "2 + 8 = 10 (left: 5 10 11)  \n10 - 11 = -1 (left: 5 -1)\n",
                    "2 + 8 = 10 (left: 5 10 11)  \n11 - 10 = 1 (left: 5 1)\n",
                    "2 + 8 = 10 (left: 5 10 11)  \n5 * 10 = 50 (left: 11 50)\n",
                    "2 + 8 = 10 (left: 5 10 11)  \n5 * 11 = 55 (left: 10 55)\n",
                    "2 + 8 = 10 (left: 5 10 11)  \n10 * 11 = 110 (left: 5 110)\n",
                    "2 + 8 = 10 (left: 5 10 11)  \n10 / 5 = 2 (left: 2 11)\n",
                    "2 + 8 = 10 (left: 5 10 11)  \n11 / 5 = 2.2 (left: 2.2 10)\n",
                    "2 + 8 = 10 (left: 5 10 11)  \n11 / 10 = 1.1 (left: 5 1.1)\n"
                ],
                "values": [
                    0.002,
                    0.002,
                    0.0,
                    20.002,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.003,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.002,
                    0.0,
                    0.001,
                    0.002,
                    0.0,
                    0.001
                ],
                "select_new_ys": [
                    "8 - 2 = 6 (left: 5 6 11)  \n11 - 5 = 6 (left: 6 6)\n",
                    "2 + 5 = 7 (left: 7 8 11)  \n11 - 7 = 4 (left: 8 4)\n",
                    "8 - 2 = 6 (left: 5 6 11)  \n5 + 6 = 11 (left: 11 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 5 8 11",
                "ys": [
                    "8 - 2 = 6 (left: 5 6 11)  \n11 - 5 = 6 (left: 6 6)\n",
                    "2 + 5 = 7 (left: 7 8 11)  \n11 - 7 = 4 (left: 8 4)\n",
                    "8 - 2 = 6 (left: 5 6 11)  \n5 + 6 = 11 (left: 11 11)\n"
                ],
                "new_ys": [
                    "8 - 2 = 6 (left: 5 6 11)  \n11 - 5 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)  \n",
                    "8 - 2 = 6 (left: 5 6 11)  \n11 - 5 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)  \n",
                    "8 - 2 = 6 (left: 5 6 11)  \n11 - 5 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0)  \n",
                    "8 - 2 = 6 (left: 5 6 11)  \n11 - 5 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1)  \n",
                    "2 + 5 = 7 (left: 7 8 11)  \n11 - 7 = 4 (left: 8 4)\n8 / 4 = 2 (left: 2)\n",
                    "2 + 5 = 7 (left: 7 8 11)  \n11 - 7 = 4 (left: 8 4)\n8 - 4 = 4 (left: 4)\n",
                    "2 + 5 = 7 (left: 7 8 11)  \n11 - 7 = 4 (left: 8 4)\n8 + 4 = 12 (left: 12)\n",
                    "2 + 5 = 7 (left: 7 8 11)  \n11 - 7 = 4 (left: 8 4)\n8 * 4 = 32 (left: 32)\n",
                    "8 - 2 = 6 (left: 5 6 11)  \n5 + 6 = 11 (left: 11 11)\n11 + 11 = 22 (left: 22)\n",
                    "8 - 2 = 6 (left: 5 6 11)  \n5 + 6 = 11 (left: 11 11)\n11 * 11 = 121 (left: 121)\n"
                ],
                "values": [
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "8 - 2 = 6 (left: 5 6 11)  \n11 - 5 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)  \n",
                    "2 + 5 = 7 (left: 7 8 11)  \n11 - 7 = 4 (left: 8 4)\n8 + 4 = 12 (left: 12)\n",
                    "8 - 2 = 6 (left: 5 6 11)  \n11 - 5 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)  \n"
                ]
            },
            {
                "step": 3,
                "x": "2 5 8 11",
                "ys": [
                    "8 - 2 = 6 (left: 5 6 11)  \n11 - 5 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)  \n",
                    "2 + 5 = 7 (left: 7 8 11)  \n11 - 7 = 4 (left: 8 4)\n8 + 4 = 12 (left: 12)\n",
                    "8 - 2 = 6 (left: 5 6 11)  \n11 - 5 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)  \n"
                ],
                "new_ys": [
                    "8 - 2 = 6 (left: 5 6 11)  \n11 - 5 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)  \nNo possible next steps.\n",
                    "2 + 5 = 7 (left: 7 8 11)  \n11 - 7 = 4 (left: 8 4)\n8 + 4 = 12 (left: 12)\nNo possible next steps.\n",
                    "8 - 2 = 6 (left: 5 6 11)  \n11 - 5 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)  \nNo operations possible (left: 36)\n"
                ],
                "values": [
                    0,
                    0,
                    0.0
                ],
                "select_new_ys": [
                    "8 - 2 = 6 (left: 5 6 11)  \n11 - 5 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)  \nNo possible next steps.\n",
                    "2 + 5 = 7 (left: 7 8 11)  \n11 - 7 = 4 (left: 8 4)\n8 + 4 = 12 (left: 12)\nNo possible next steps.\n",
                    "8 - 2 = 6 (left: 5 6 11)  \n11 - 5 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)  \nNo operations possible (left: 36)\n"
                ]
            }
        ],
        "total_time": 220.39762496948242,
        "generate_time": 16.541462659835815,
        "evaluate_time": 203.77543687820435,
        "num_of_generations": 10,
        "num_of_evaluations": 71,
        "num_of_steps": 4,
        "idx": 902,
        "ys": [
            "8 - 2 = 6 (left: 5 6 11)  \n11 - 5 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)  \nNo possible next steps.\n",
            "2 + 5 = 7 (left: 7 8 11)  \n11 - 7 = 4 (left: 8 4)\n8 + 4 = 12 (left: 12)\nNo possible next steps.\n",
            "8 - 2 = 6 (left: 5 6 11)  \n11 - 5 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)  \nNo operations possible (left: 36)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 97132,
            "prompt_tokens": 68367,
            "cost": 1.1422375
        },
        "sum(accs)": 0,
        "cnt_avg": 0.6666666666666666,
        "cnt_any": 2
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 4 4 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 4 7 13)  \n",
                    "4 * 3 = 12 (left: 4 12 13)  \n",
                    "13 - 4 = 9 (left: 3 4 9)  \n",
                    "4 + 4 = 8 (left: 3 8 13)  \n",
                    "13 - 3 = 10 (left: 4 4 10)  \n",
                    "4 / 4 = 1 (left: 3 1 13)  \n",
                    "13 - 4 = 9 (left: 3 4 9)  \n",
                    "4 * 4 = 16 (left: 3 13 16)  \n",
                    "13 / 3 = 4.333... (left: 4 4 4.333...)  \n",
                    "13 - 3 = 10 (left: 4 4 10)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0.001,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "4 * 4 = 16 (left: 3 13 16)  \n",
                    "3 + 4 = 7 (left: 4 7 13)  \n",
                    "4 * 3 = 12 (left: 4 12 13)  \n"
                ]
            },
            {
                "step": 1,
                "x": "3 4 4 13",
                "ys": [
                    "4 * 4 = 16 (left: 3 13 16)  \n",
                    "3 + 4 = 7 (left: 4 7 13)  \n",
                    "4 * 3 = 12 (left: 4 12 13)  \n"
                ],
                "new_ys": [
                    "4 * 4 = 16 (left: 3 13 16)  \n3 + 13 = 16 (left: 16 16)\n",
                    "4 * 4 = 16 (left: 3 13 16)  \n13 + 3 = 16 (left: 16 16)\n",
                    "4 * 4 = 16 (left: 3 13 16)  \n16 - 13 = 3 (left: 3 3)\n",
                    "4 * 4 = 16 (left: 3 13 16)  \n16 - 3 = 13 (left: 13 13)\n",
                    "4 * 4 = 16 (left: 3 13 16)  \n13 - 3 = 10 (left: 10 16)\n",
                    "4 * 4 = 16 (left: 3 13 16)  \n16 - 10 = 6 (left: 6 3)\n",
                    "4 * 4 = 16 (left: 3 13 16)  \n16 / 3 = 5.333... (left: 5.333... 13)\n",
                    "4 * 4 = 16 (left: 3 13 16)  \n16 / 13 = 1.2307... (left: 1.2307... 3)\n",
                    "4 * 4 = 16 (left: 3 13 16)  \n13 / 3 = 4.333... (left: 4.333... 16)\n",
                    "4 * 4 = 16 (left: 3 13 16)  \n16 / 13 = 1.2307... (left: 1.2307... 3)\n",
                    "3 + 4 = 7 (left: 4 7 13)  \n4 + 7 = 11 (left: 11 13)\n",
                    "3 + 4 = 7 (left: 4 7 13)  \n7 + 4 = 11 (left: 11 13)\n",
                    "3 + 4 = 7 (left: 4 7 13)  \n13 + 4 = 17 (left: 7 17)\n",
                    "3 + 4 = 7 (left: 4 7 13)  \n13 + 7 = 20 (left: 4 20)\n",
                    "3 + 4 = 7 (left: 4 7 13)  \n4 * 7 = 28 (left: 13 28)\n",
                    "3 + 4 = 7 (left: 4 7 13)  \n4 * 13 = 52 (left: 7 52)\n",
                    "3 + 4 = 7 (left: 4 7 13)  \n7 * 13 = 91 (left: 4 91)\n",
                    "3 + 4 = 7 (left: 4 7 13)  \n7 - 4 = 3 (left: 3 13)\n",
                    "3 + 4 = 7 (left: 4 7 13)  \n13 - 4 = 9 (left: 7 9)\n",
                    "3 + 4 = 7 (left: 4 7 13)  \n13 - 7 = 6 (left: 4 6)\n",
                    "3 + 4 = 7 (left: 4 7 13)  \n7 / 4 = 1.75 (left: 1.75 13)\n",
                    "3 + 4 = 7 (left: 4 7 13)  \n13 / 4 = 3.25 (left: 7 3.25)\n",
                    "3 + 4 = 7 (left: 4 7 13)  \n13 / 7 \u2248 1.857 (left: 4 1.857)\n",
                    "4 * 3 = 12 (left: 4 12 13)  \n4 + 12 = 16 (left: 13 16)\n",
                    "4 * 3 = 12 (left: 4 12 13)  \n12 - 4 = 8 (left: 8 13)\n",
                    "4 * 3 = 12 (left: 4 12 13)  \n13 - 4 = 9 (left: 9 12)\n",
                    "4 * 3 = 12 (left: 4 12 13)  \n13 - 12 = 1 (left: 1 4)\n",
                    "4 * 3 = 12 (left: 4 12 13)  \n12 / 4 = 3 (left: 3 13)\n",
                    "4 * 3 = 12 (left: 4 12 13)  \n13 + 4 = 17 (left: 12 17)\n",
                    "4 * 3 = 12 (left: 4 12 13)  \n12 + 13 = 25 (left: 4 25)\n",
                    "4 * 3 = 12 (left: 4 12 13)  \n13 / 4 = 3.25 (left: 3.25 12)\n",
                    "4 * 3 = 12 (left: 4 12 13)  \n12 / 13 = 0.923 (left: 0.923 4)\n",
                    "4 * 3 = 12 (left: 4 12 13)  \n13 / 12 = 1.083 (left: 1.083 4)\n",
                    "4 * 3 = 12 (left: 4 12 13)  \n\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.002,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    20.0,
                    40.0,
                    0.0,
                    0.0,
                    0.0,
                    0.002,
                    0.0,
                    60.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.001,
                    0.002,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 4 7 13)  \n13 - 7 = 6 (left: 4 6)\n",
                    "3 + 4 = 7 (left: 4 7 13)  \n13 + 7 = 20 (left: 4 20)\n",
                    "3 + 4 = 7 (left: 4 7 13)  \n13 + 4 = 17 (left: 7 17)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 4 4 13",
                "ys": [
                    "3 + 4 = 7 (left: 4 7 13)  \n13 - 7 = 6 (left: 4 6)\n",
                    "3 + 4 = 7 (left: 4 7 13)  \n13 + 7 = 20 (left: 4 20)\n",
                    "3 + 4 = 7 (left: 4 7 13)  \n13 + 4 = 17 (left: 7 17)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 4 7 13)  \n13 - 7 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)\n",
                    "3 + 4 = 7 (left: 4 7 13)  \n13 - 7 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)\n",
                    "3 + 4 = 7 (left: 4 7 13)  \n13 - 7 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)\n",
                    "3 + 4 = 7 (left: 4 7 13)  \n13 - 7 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "3 + 4 = 7 (left: 4 7 13)  \n13 + 7 = 20 (left: 4 20)\n4 + 20 = 24 (left: 24)\n",
                    "3 + 4 = 7 (left: 4 7 13)  \n13 + 7 = 20 (left: 4 20)\n20 - 4 = 16 (left: 16)\n",
                    "3 + 4 = 7 (left: 4 7 13)  \n13 + 7 = 20 (left: 4 20)\n20 / 4 = 5 (left: 5)\n",
                    "3 + 4 = 7 (left: 4 7 13)  \n13 + 7 = 20 (left: 4 20)\n4 * 20 = 80 (left: 80)\n",
                    "3 + 4 = 7 (left: 4 7 13)  \n13 + 4 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\n",
                    "3 + 4 = 7 (left: 4 7 13)  \n13 + 4 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10)\n",
                    "3 + 4 = 7 (left: 4 7 13)  \n13 + 4 = 17 (left: 7 17)\n17 / 7 = 2.4285714285714284 (left: 2.4285714285714284)\n",
                    "3 + 4 = 7 (left: 4 7 13)  \n13 + 4 = 17 (left: 7 17)\n17 * 7 = 119 (left: 119)\n",
                    "3 + 4 = 7 (left: 4 7 13)  \n13 + 4 = 17 (left: 7 17)\n17 + 7 = 24 (left: 24)\n",
                    "3 + 4 = 7 (left: 4 7 13)  \n13 + 4 = 17 (left: 7 17)\n7 - 17 = -10 (left: -10)\n",
                    "3 + 4 = 7 (left: 4 7 13)  \n13 + 4 = 17 (left: 7 17)\n7 / 17 = 0.4117647058823529 (left: 0.4117647058823529)\n",
                    "3 + 4 = 7 (left: 4 7 13)  \n13 + 4 = 17 (left: 7 17)\n7 * 17 = 119 (left: 119)\n"
                ],
                "values": [
                    0.002,
                    0.0,
                    0.0,
                    60.0,
                    60.0,
                    0.0,
                    0.0,
                    0.0,
                    60.0,
                    0.002,
                    0.0,
                    0.0,
                    60.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 4 7 13)  \n13 - 7 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "3 + 4 = 7 (left: 4 7 13)  \n13 + 7 = 20 (left: 4 20)\n4 + 20 = 24 (left: 24)\n",
                    "3 + 4 = 7 (left: 4 7 13)  \n13 + 4 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 4 4 13",
                "ys": [
                    "3 + 4 = 7 (left: 4 7 13)  \n13 - 7 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "3 + 4 = 7 (left: 4 7 13)  \n13 + 7 = 20 (left: 4 20)\n4 + 20 = 24 (left: 24)\n",
                    "3 + 4 = 7 (left: 4 7 13)  \n13 + 4 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "3 + 4 = 7 (left: 4 7 13)  \n13 - 7 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (13 - (3 + 4)) = 24\n",
                    "3 + 4 = 7 (left: 4 7 13)  \n13 + 7 = 20 (left: 4 20)\n4 + 20 = 24 (left: 24)\nAnswer: ((3 + 4) + 13) + 4 = 24\n",
                    "3 + 4 = 7 (left: 4 7 13)  \n13 + 4 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: ((3 + 4) + 4) + 13 = 24\n"
                ],
                "values": [
                    60.0,
                    20.002,
                    0.003
                ],
                "select_new_ys": [
                    "3 + 4 = 7 (left: 4 7 13)  \n13 - 7 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (13 - (3 + 4)) = 24\n",
                    "3 + 4 = 7 (left: 4 7 13)  \n13 + 7 = 20 (left: 4 20)\n4 + 20 = 24 (left: 24)\nAnswer: ((3 + 4) + 13) + 4 = 24\n",
                    "3 + 4 = 7 (left: 4 7 13)  \n13 + 4 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: ((3 + 4) + 4) + 13 = 24\n"
                ]
            }
        ],
        "total_time": 138.50731706619263,
        "generate_time": 15.89138126373291,
        "evaluate_time": 122.58652305603027,
        "num_of_generations": 10,
        "num_of_evaluations": 63,
        "num_of_steps": 4,
        "idx": 903,
        "ys": [
            "3 + 4 = 7 (left: 4 7 13)  \n13 - 7 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (13 - (3 + 4)) = 24\n",
            "3 + 4 = 7 (left: 4 7 13)  \n13 + 7 = 20 (left: 4 20)\n4 + 20 = 24 (left: 24)\nAnswer: ((3 + 4) + 13) + 4 = 24\n",
            "3 + 4 = 7 (left: 4 7 13)  \n13 + 4 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: ((3 + 4) + 4) + 13 = 24\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 121346,
            "prompt_tokens": 86045,
            "cost": 1.4285725
        },
        "sum(accs)": 3,
        "cnt_avg": 1.6666666666666665,
        "cnt_any": 3
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 7 8 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 + 7 = 13 (left: 8 9 13)  \n",
                    "6 + 8 = 14 (left: 7 9 14)  \n",
                    "6 + 9 = 15 (left: 7 8 15)  \n",
                    "7 + 8 = 15 (left: 6 9 15)  \n",
                    "7 + 9 = 16 (left: 6 8 16)  \n",
                    "8 + 9 = 17 (left: 6 7 17)  \n",
                    "9 - 6 = 3 (left: 7 8 3)  \n",
                    "9 - 7 = 2 (left: 6 8 2)  \n",
                    "9 - 8 = 1 (left: 6 7 1)  \n",
                    "8 - 6 = 2 (left: 7 9 2)  \n",
                    "8 - 7 = 1 (left: 6 9 1)  \n",
                    "7 - 6 = 1 (left: 8 9 1)  \n",
                    "6 * 7 = 42 (left: 8 9 42)  \n",
                    "6 * 8 = 48 (left: 7 9 48)  \n",
                    "6 * 9 = 54 (left: 7 8 54)  \n",
                    "7 * 8 = 56 (left: 6 9 56)  \n",
                    "7 * 9 = 63 (left: 6 8 63)  \n",
                    "8 * 9 = 72 (left: 6 7 72)  \n",
                    "7 / 6 = 1.1667 (left: 8 9 1.1667)  \n",
                    "8 / 6 = 1.3333 (left: 7 9 1.3333)  \n",
                    "9 / 6 = 1.5 (left: 7 8 1.5)  \n",
                    "8 / 7 = 1.1429 (left: 6 9 1.1429)  \n",
                    "9 / 7 = 1.2857 (left: 6 8 1.2857)  \n",
                    "9 / 8 = 1.125 (left: 6 7 1.125)\n"
                ],
                "values": [
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    20.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "9 - 7 = 2 (left: 6 8 2)  \n",
                    "6 + 7 = 13 (left: 8 9 13)  \n",
                    "8 + 9 = 17 (left: 6 7 17)  \n"
                ]
            },
            {
                "step": 1,
                "x": "6 7 8 9",
                "ys": [
                    "9 - 7 = 2 (left: 6 8 2)  \n",
                    "6 + 7 = 13 (left: 8 9 13)  \n",
                    "8 + 9 = 17 (left: 6 7 17)  \n"
                ],
                "new_ys": [
                    "9 - 7 = 2 (left: 6 8 2)  \n6 + 8 = 14 (left: 2 14)\n",
                    "9 - 7 = 2 (left: 6 8 2)  \n8 + 2 = 10 (left: 6 10)\n",
                    "9 - 7 = 2 (left: 6 8 2)  \n6 + 2 = 8 (left: 8 8)\n",
                    "9 - 7 = 2 (left: 6 8 2)  \n8 - 6 = 2 (left: 2 2)\n",
                    "9 - 7 = 2 (left: 6 8 2)  \n8 - 2 = 6 (left: 6 6)\n",
                    "9 - 7 = 2 (left: 6 8 2)  \n6 - 2 = 4 (left: 4 8)\n",
                    "9 - 7 = 2 (left: 6 8 2)  \n8 * 2 = 16 (left: 6 16)\n",
                    "9 - 7 = 2 (left: 6 8 2)  \n6 * 2 = 12 (left: 8 12)\n",
                    "9 - 7 = 2 (left: 6 8 2)  \n8 / 2 = 4 (left: 6 4)\n",
                    "9 - 7 = 2 (left: 6 8 2)  \n6 / 2 = 3 (left: 8 3)\n",
                    "6 + 7 = 13 (left: 8 9 13)  \n8 + 9 = 17 (left: 13 17)\n",
                    "6 + 7 = 13 (left: 8 9 13)  \n8 + 13 = 21 (left: 9 21)\n",
                    "6 + 7 = 13 (left: 8 9 13)  \n9 + 13 = 22 (left: 8 22)\n",
                    "6 + 7 = 13 (left: 8 9 13)  \n9 - 8 = 1 (left: 1 13)\n",
                    "6 + 7 = 13 (left: 8 9 13)  \n13 - 8 = 5 (left: 9 5)\n",
                    "6 + 7 = 13 (left: 8 9 13)  \n13 - 9 = 4 (left: 8 4)\n",
                    "6 + 7 = 13 (left: 8 9 13)  \n8 * 9 = 72 (left: 13 72)\n",
                    "6 + 7 = 13 (left: 8 9 13)  \n8 * 13 = 104 (left: 9 104)\n",
                    "6 + 7 = 13 (left: 8 9 13)  \n9 * 13 = 117 (left: 8 117)\n",
                    "6 + 7 = 13 (left: 8 9 13)  \n9 / 8 = 1.125 (left: 13 1.125)\n",
                    "6 + 7 = 13 (left: 8 9 13)  \n13 / 8 = 1.625 (left: 9 1.625)\n",
                    "6 + 7 = 13 (left: 8 9 13)  \n13 / 9 = 1.4444 (left: 8 1.4444)\n",
                    "8 + 9 = 17 (left: 6 7 17)  \n6 + 7 = 13 (left: 13 17)\n",
                    "8 + 9 = 17 (left: 6 7 17)  \n7 + 17 = 24 (left: 6 24)\n",
                    "8 + 9 = 17 (left: 6 7 17)  \n17 + 6 = 23 (left: 7 23)\n",
                    "8 + 9 = 17 (left: 6 7 17)  \n7 * 6 = 42 (left: 17 42)\n",
                    "8 + 9 = 17 (left: 6 7 17)  \n17 - 7 = 10 (left: 6 10)\n",
                    "8 + 9 = 17 (left: 6 7 17)  \n17 - 6 = 11 (left: 7 11)\n",
                    "8 + 9 = 17 (left: 6 7 17)  \n7 - 6 = 1 (left: 1 17)\n",
                    "8 + 9 = 17 (left: 6 7 17)  \n17 / 7 = 2.4285714285714284 (left: 6 2.4285714285714284)\n",
                    "8 + 9 = 17 (left: 6 7 17)  \n17 / 6 = 2.8333333333333335 (left: 7 2.8333333333333335)\n",
                    "8 + 9 = 17 (left: 6 7 17)  \n7 / 6 = 1.1666666666666667 (left: 17 1.1666666666666667)\n"
                ],
                "values": [
                    20.0,
                    0.0,
                    0.001,
                    0.0,
                    20.002,
                    0.0,
                    0.0,
                    1.001,
                    20.0,
                    0.0,
                    20.001,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.003,
                    0.0,
                    0.002,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    20.001,
                    40.001,
                    0.001,
                    0.002,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "8 + 9 = 17 (left: 6 7 17)  \n7 + 17 = 24 (left: 6 24)\n",
                    "9 - 7 = 2 (left: 6 8 2)  \n8 - 2 = 6 (left: 6 6)\n",
                    "6 + 7 = 13 (left: 8 9 13)  \n8 + 9 = 17 (left: 13 17)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 7 8 9",
                "ys": [
                    "8 + 9 = 17 (left: 6 7 17)  \n7 + 17 = 24 (left: 6 24)\n",
                    "9 - 7 = 2 (left: 6 8 2)  \n8 - 2 = 6 (left: 6 6)\n",
                    "6 + 7 = 13 (left: 8 9 13)  \n8 + 9 = 17 (left: 13 17)\n"
                ],
                "new_ys": [
                    "8 + 9 = 17 (left: 6 7 17)  \n7 + 17 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24 24)\n",
                    "8 + 9 = 17 (left: 6 7 17)  \n7 + 17 = 24 (left: 6 24)\n24 / 6 = 4 (left: 4 24)\n",
                    "8 + 9 = 17 (left: 6 7 17)  \n7 + 17 = 24 (left: 6 24)\n24 / 24 = 1 (left: 6 1)\n",
                    "8 + 9 = 17 (left: 6 7 17)  \n7 + 17 = 24 (left: 6 24)\n24 - 6 = 18 (left: 6 18)\n",
                    "8 + 9 = 17 (left: 6 7 17)  \n7 + 17 = 24 (left: 6 24)\n24 - 24 = 0 (left: 6 0)\n",
                    "8 + 9 = 17 (left: 6 7 17)  \n7 + 17 = 24 (left: 6 24)\n24 + 6 = 30 (left: 30)\n",
                    "9 - 7 = 2 (left: 6 8 2)  \n8 - 2 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)\n",
                    "9 - 7 = 2 (left: 6 8 2)  \n8 - 2 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n",
                    "9 - 7 = 2 (left: 6 8 2)  \n8 - 2 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0)\n",
                    "9 - 7 = 2 (left: 6 8 2)  \n8 - 2 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1)\n",
                    "6 + 7 = 13 (left: 8 9 13)  \n8 + 9 = 17 (left: 13 17)\n13 + 17 = 30 (left: 30)\n",
                    "6 + 7 = 13 (left: 8 9 13)  \n8 + 9 = 17 (left: 13 17)\n17 - 13 = 4 (left: 4)\n",
                    "6 + 7 = 13 (left: 8 9 13)  \n8 + 9 = 17 (left: 13 17)\n13 - 17 = -4 (left: -4)\n",
                    "6 + 7 = 13 (left: 8 9 13)  \n8 + 9 = 17 (left: 13 17)\n13 * 17 = 221 (left: 221)\n",
                    "6 + 7 = 13 (left: 8 9 13)  \n8 + 9 = 17 (left: 13 17)\n17 / 13 = 1.3076923076923077 (left: 1.3076923076923077)\n",
                    "6 + 7 = 13 (left: 8 9 13)  \n8 + 9 = 17 (left: 13 17)\n13 / 17 = 0.7647058823529411 (left: 0.7647058823529411)\n"
                ],
                "values": [
                    40.0,
                    20.0,
                    0.001,
                    60.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "8 + 9 = 17 (left: 6 7 17)  \n7 + 17 = 24 (left: 6 24)\n24 - 6 = 18 (left: 6 18)\n",
                    "8 + 9 = 17 (left: 6 7 17)  \n7 + 17 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24 24)\n",
                    "8 + 9 = 17 (left: 6 7 17)  \n7 + 17 = 24 (left: 6 24)\n24 / 6 = 4 (left: 4 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 7 8 9",
                "ys": [
                    "8 + 9 = 17 (left: 6 7 17)  \n7 + 17 = 24 (left: 6 24)\n24 - 6 = 18 (left: 6 18)\n",
                    "8 + 9 = 17 (left: 6 7 17)  \n7 + 17 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24 24)\n",
                    "8 + 9 = 17 (left: 6 7 17)  \n7 + 17 = 24 (left: 6 24)\n24 / 6 = 4 (left: 4 24)\n"
                ],
                "new_ys": [
                    "8 + 9 = 17 (left: 6 7 17)  \n7 + 17 = 24 (left: 6 24)\n24 - 6 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\n",
                    "8 + 9 = 17 (left: 6 7 17)  \n7 + 17 = 24 (left: 6 24)\n24 - 6 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n",
                    "8 + 9 = 17 (left: 6 7 17)  \n7 + 17 = 24 (left: 6 24)\n24 - 6 = 18 (left: 6 18)\n18 / 6 = 3 (left: 3)\n",
                    "8 + 9 = 17 (left: 6 7 17)  \n7 + 17 = 24 (left: 6 24)\n24 - 6 = 18 (left: 6 18)\n6 * 18 = 108 (left: 108)\n",
                    "8 + 9 = 17 (left: 6 7 17)  \n7 + 17 = 24 (left: 6 24)\n24 - 6 = 18 (left: 6 18)\n18 + 6 = 24 (left: 24)\n",
                    "8 + 9 = 17 (left: 6 7 17)  \n7 + 17 = 24 (left: 6 24)\n24 - 6 = 18 (left: 6 18)\n6 - 18 = -12 (left: -12)\n",
                    "8 + 9 = 17 (left: 6 7 17)  \n7 + 17 = 24 (left: 6 24)\n24 - 6 = 18 (left: 6 18)\n6 / 18 = 0.333... (left: 0.333...)\n",
                    "8 + 9 = 17 (left: 6 7 17)  \n7 + 17 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24 24)\n24 / 24 = 1 (left: 1)  \n",
                    "8 + 9 = 17 (left: 6 7 17)  \n7 + 17 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24 24)\n24 - 24 = 0 (left: 0)  \n",
                    "8 + 9 = 17 (left: 6 7 17)  \n7 + 17 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24 24)\n24 + 24 = 48 (left: 48)  \n",
                    "8 + 9 = 17 (left: 6 7 17)  \n7 + 17 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24 24)\n24 * 24 = 576 (left: 576)\n",
                    "8 + 9 = 17 (left: 6 7 17)  \n7 + 17 = 24 (left: 6 24)\n24 / 6 = 4 (left: 4 24)\n4 + 24 = 28 (left: 28)\n",
                    "8 + 9 = 17 (left: 6 7 17)  \n7 + 17 = 24 (left: 6 24)\n24 / 6 = 4 (left: 4 24)\n24 / 4 = 6 (left: 6)\n",
                    "8 + 9 = 17 (left: 6 7 17)  \n7 + 17 = 24 (left: 6 24)\n24 / 6 = 4 (left: 4 24)\n24 - 4 = 20 (left: 20)\n",
                    "8 + 9 = 17 (left: 6 7 17)  \n7 + 17 = 24 (left: 6 24)\n24 / 6 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\n"
                ],
                "values": [
                    60.0,
                    0.001,
                    0.001,
                    0,
                    60.0,
                    0,
                    0,
                    0.0,
                    0.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "8 + 9 = 17 (left: 6 7 17)  \n7 + 17 = 24 (left: 6 24)\n24 - 6 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\n",
                    "8 + 9 = 17 (left: 6 7 17)  \n7 + 17 = 24 (left: 6 24)\n24 - 6 = 18 (left: 6 18)\n18 + 6 = 24 (left: 24)\n",
                    "8 + 9 = 17 (left: 6 7 17)  \n7 + 17 = 24 (left: 6 24)\n24 - 6 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n"
                ]
            }
        ],
        "total_time": 278.2358901500702,
        "generate_time": 21.412459135055542,
        "evaluate_time": 256.8108513355255,
        "num_of_generations": 10,
        "num_of_evaluations": 87,
        "num_of_steps": 4,
        "idx": 904,
        "ys": [
            "8 + 9 = 17 (left: 6 7 17)  \n7 + 17 = 24 (left: 6 24)\n24 - 6 = 18 (left: 6 18)\n6 + 18 = 24 (left: 24)\n",
            "8 + 9 = 17 (left: 6 7 17)  \n7 + 17 = 24 (left: 6 24)\n24 - 6 = 18 (left: 6 18)\n18 + 6 = 24 (left: 24)\n",
            "8 + 9 = 17 (left: 6 7 17)  \n7 + 17 = 24 (left: 6 24)\n24 - 6 = 18 (left: 6 18)\n18 - 6 = 12 (left: 12)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 169585,
            "prompt_tokens": 112927,
            "cost": 1.9781675
        },
        "sum(accs)": 0,
        "cnt_avg": 1.6666666666666665,
        "cnt_any": 3
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 11 11 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 11 = 12 (left: 11 12 13)  \n",
                    "1 + 13 = 14 (left: 11 11 14)  \n",
                    "11 + 11 = 22 (left: 1 13 22)  \n",
                    "11 + 13 = 24 (left: 1 11 24)  \n",
                    "13 - 1 = 12 (left: 11 11 12)  \n",
                    "11 - 1 = 10 (left: 11 13 10)  \n",
                    "11 - 11 = 0 (left: 1 13 0)  \n",
                    "13 - 11 = 2 (left: 1 11 2)  \n",
                    "11 * 1 = 11 (left: 11 13 11)  \n",
                    "11 * 11 = 121 (left: 1 13 121)  \n",
                    "13 / 1 = 13 (left: 11 11 13)  \n",
                    "11 / 1 = 11 (left: 11 13 11)  \n",
                    "11 / 11 = 1 (left: 1 13 1)  \n"
                ],
                "values": [
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "1 + 13 = 14 (left: 11 11 14)  \n",
                    "11 - 11 = 0 (left: 1 13 0)  \n",
                    "1 + 11 = 12 (left: 11 12 13)  \n"
                ]
            },
            {
                "step": 1,
                "x": "1 11 11 13",
                "ys": [
                    "1 + 13 = 14 (left: 11 11 14)  \n",
                    "11 - 11 = 0 (left: 1 13 0)  \n",
                    "1 + 11 = 12 (left: 11 12 13)  \n"
                ],
                "new_ys": [
                    "1 + 13 = 14 (left: 11 11 14)  \n11 + 11 = 22 (left: 14 22)  \n",
                    "1 + 13 = 14 (left: 11 11 14)  \n11 + 14 = 25 (left: 11 25)  \n",
                    "1 + 13 = 14 (left: 11 11 14)  \n11 + 14 = 25 (left: 11 25)  \n",
                    "1 + 13 = 14 (left: 11 11 14)  \n11 * 11 = 121 (left: 14 121)  \n",
                    "1 + 13 = 14 (left: 11 11 14)  \n11 * 14 = 154 (left: 11 154)  \n",
                    "1 + 13 = 14 (left: 11 11 14)  \n11 * 14 = 154 (left: 11 154)  \n",
                    "1 + 13 = 14 (left: 11 11 14)  \n11 - 11 = 0 (left: 14 0)  \n",
                    "1 + 13 = 14 (left: 11 11 14)  \n14 - 11 = 3 (left: 11 3)  \n",
                    "1 + 13 = 14 (left: 11 11 14)  \n14 - 11 = 3 (left: 11 3)  \n",
                    "1 + 13 = 14 (left: 11 11 14)  \n14 / 11 \u2248 1.27 (left: 11 1.27)  \n",
                    "1 + 13 = 14 (left: 11 11 14)  \n11 / 14 \u2248 0.79 (left: 11 0.79)  \n",
                    "1 + 13 = 14 (left: 11 11 14)  \n11 / 14 \u2248 0.79 (left: 11 0.79)\n",
                    "11 - 11 = 0 (left: 1 13 0)  \n13 + 1 = 14 (left: 0 14)\n",
                    "11 - 11 = 0 (left: 1 13 0)  \n13 - 1 = 12 (left: 0 12)\n",
                    "11 - 11 = 0 (left: 1 13 0)  \n13 * 1 = 13 (left: 0 13)\n",
                    "11 - 11 = 0 (left: 1 13 0)  \n13 + 0 = 13 (left: 1 13)\n",
                    "11 - 11 = 0 (left: 1 13 0)  \n13 - 0 = 13 (left: 1 13)\n",
                    "11 - 11 = 0 (left: 1 13 0)  \n1 + 0 = 1 (left: 13 1)\n",
                    "11 - 11 = 0 (left: 1 13 0)  \n1 - 0 = 1 (left: 13 1)\n",
                    "11 - 11 = 0 (left: 1 13 0)  \n13 / 1 = 13 (left: 0 13)\n",
                    "11 - 11 = 0 (left: 1 13 0)  \n1 * 0 = 0 (left: 13 0)\n",
                    "1 + 11 = 12 (left: 11 12 13)  \n11 + 12 = 23 (left: 13 23)\n",
                    "1 + 11 = 12 (left: 11 12 13)  \n12 + 13 = 25 (left: 11 25)\n",
                    "1 + 11 = 12 (left: 11 12 13)  \n13 + 11 = 24 (left: 12 24)\n",
                    "1 + 11 = 12 (left: 11 12 13)  \n12 - 11 = 1 (left: 13 1)\n",
                    "1 + 11 = 12 (left: 11 12 13)  \n13 - 12 = 1 (left: 11 1)\n",
                    "1 + 11 = 12 (left: 11 12 13)  \n13 - 11 = 2 (left: 12 2)\n",
                    "1 + 11 = 12 (left: 11 12 13)  \n12 - 13 = -1 (left: 11 -1)\n",
                    "1 + 11 = 12 (left: 11 12 13)  \n11 - 12 = -1 (left: 13 -1)\n",
                    "1 + 11 = 12 (left: 11 12 13)  \n11 * 12 = 132 (left: 13 132)\n",
                    "1 + 11 = 12 (left: 11 12 13)  \n12 * 13 = 156 (left: 11 156)\n",
                    "1 + 11 = 12 (left: 11 12 13)  \n13 * 11 = 143 (left: 12 143)\n",
                    "1 + 11 = 12 (left: 11 12 13)  \n12 / 11 = 1.0909 (left: 13 1.0909)\n",
                    "1 + 11 = 12 (left: 11 12 13)  \n13 / 12 = 1.0833 (left: 11 1.0833)\n",
                    "1 + 11 = 12 (left: 11 12 13)  \n11 / 13 = 0.8462 (left: 12 0.8462)\n",
                    "1 + 11 = 12 (left: 11 12 13)  \n13 / 11 = 1.1818 (left: 12 1.1818)\n",
                    "1 + 11 = 12 (left: 11 12 13)  \n11 / 12 = 0.9167 (left: 13 0.9167)\n",
                    "1 + 11 = 12 (left: 11 12 13)  \n12 / 13 = 0.9231 (left: 11 0.9231)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    0,
                    0.002,
                    0.001,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.001,
                    0.002,
                    0.0,
                    0.0,
                    0.002,
                    0.002,
                    0.002,
                    0.001,
                    0.0,
                    0.0,
                    40.0,
                    0.002,
                    0.001,
                    40.0,
                    0.001,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "1 + 11 = 12 (left: 11 12 13)  \n13 + 11 = 24 (left: 12 24)\n",
                    "1 + 11 = 12 (left: 11 12 13)  \n13 - 11 = 2 (left: 12 2)\n",
                    "1 + 13 = 14 (left: 11 11 14)  \n11 - 11 = 0 (left: 14 0)  \n"
                ]
            },
            {
                "step": 2,
                "x": "1 11 11 13",
                "ys": [
                    "1 + 11 = 12 (left: 11 12 13)  \n13 + 11 = 24 (left: 12 24)\n",
                    "1 + 11 = 12 (left: 11 12 13)  \n13 - 11 = 2 (left: 12 2)\n",
                    "1 + 13 = 14 (left: 11 11 14)  \n11 - 11 = 0 (left: 14 0)  \n"
                ],
                "new_ys": [
                    "1 + 11 = 12 (left: 11 12 13)  \n13 + 11 = 24 (left: 12 24)\n12 + 24 = 36 (left: 36)\n",
                    "1 + 11 = 12 (left: 11 12 13)  \n13 + 11 = 24 (left: 12 24)\n24 - 12 = 12 (left: 12)\n",
                    "1 + 11 = 12 (left: 11 12 13)  \n13 + 11 = 24 (left: 12 24)\n24 / 12 = 2 (left: 2)\n",
                    "1 + 11 = 12 (left: 11 12 13)  \n13 + 11 = 24 (left: 12 24)\n24 * 12 = 288 (left: 288)\n",
                    "1 + 11 = 12 (left: 11 12 13)  \n13 - 11 = 2 (left: 12 2)\n12 + 2 = 14 (left: 14)\n",
                    "1 + 11 = 12 (left: 11 12 13)  \n13 - 11 = 2 (left: 12 2)\n12 - 2 = 10 (left: 10)\n",
                    "1 + 11 = 12 (left: 11 12 13)  \n13 - 11 = 2 (left: 12 2)\n12 * 2 = 24 (left: 24)\n",
                    "1 + 11 = 12 (left: 11 12 13)  \n13 - 11 = 2 (left: 12 2)\n12 / 2 = 6 (left: 6)\n",
                    "1 + 13 = 14 (left: 11 11 14)  \n11 - 11 = 0 (left: 14 0)  \n14 + 0 = 14 (left: 14)  \n",
                    "1 + 13 = 14 (left: 11 11 14)  \n11 - 11 = 0 (left: 14 0)  \n14 - 0 = 14 (left: 14)  \n",
                    "1 + 13 = 14 (left: 11 11 14)  \n11 - 11 = 0 (left: 14 0)  \n14 * 0 = 0 (left: 0)  \n",
                    "1 + 13 = 14 (left: 11 11 14)  \n11 - 11 = 0 (left: 14 0)  \n14 / 0 = undefined (operation not possible)  \n",
                    "1 + 13 = 14 (left: 11 11 14)  \n11 - 11 = 0 (left: 14 0)  \n0 + 14 = 14 (left: 14)  \n",
                    "1 + 13 = 14 (left: 11 11 14)  \n11 - 11 = 0 (left: 14 0)  \n0 - 14 = -14 (left: -14)  \n",
                    "1 + 13 = 14 (left: 11 11 14)  \n11 - 11 = 0 (left: 14 0)  \n0 * 14 = 0 (left: 0)  \n",
                    "1 + 13 = 14 (left: 11 11 14)  \n11 - 11 = 0 (left: 14 0)  \n0 / 14 = 0 (left: 0)\n"
                ],
                "values": [
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.002,
                    60.0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.003,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "1 + 11 = 12 (left: 11 12 13)  \n13 - 11 = 2 (left: 12 2)\n12 * 2 = 24 (left: 24)\n",
                    "1 + 13 = 14 (left: 11 11 14)  \n11 - 11 = 0 (left: 14 0)  \n14 / 0 = undefined (operation not possible)  \n",
                    "1 + 11 = 12 (left: 11 12 13)  \n13 - 11 = 2 (left: 12 2)\n12 - 2 = 10 (left: 10)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 11 11 13",
                "ys": [
                    "1 + 11 = 12 (left: 11 12 13)  \n13 - 11 = 2 (left: 12 2)\n12 * 2 = 24 (left: 24)\n",
                    "1 + 13 = 14 (left: 11 11 14)  \n11 - 11 = 0 (left: 14 0)  \n14 / 0 = undefined (operation not possible)  \n",
                    "1 + 11 = 12 (left: 11 12 13)  \n13 - 11 = 2 (left: 12 2)\n12 - 2 = 10 (left: 10)\n"
                ],
                "new_ys": [
                    "1 + 11 = 12 (left: 11 12 13)  \n13 - 11 = 2 (left: 12 2)\n12 * 2 = 24 (left: 24)\nAnswer: (1 + 11) * (13 - 11) = 24\n",
                    "1 + 13 = 14 (left: 11 11 14)  \n11 - 11 = 0 (left: 14 0)  \n14 / 0 = undefined (operation not possible)  \n14 + 0 = 14 (left: 14 0 14)\n",
                    "1 + 13 = 14 (left: 11 11 14)  \n11 - 11 = 0 (left: 14 0)  \n14 / 0 = undefined (operation not possible)  \n14 * 0 = 0 (left: 0 0 14)\n",
                    "1 + 13 = 14 (left: 11 11 14)  \n11 - 11 = 0 (left: 14 0)  \n14 / 0 = undefined (operation not possible)  \n14 - 0 = 14 (left: 0 0 14)\n",
                    "1 + 13 = 14 (left: 11 11 14)  \n11 - 11 = 0 (left: 14 0)  \n14 / 0 = undefined (operation not possible)  \n\n",
                    "1 + 11 = 12 (left: 11 12 13)  \n13 - 11 = 2 (left: 12 2)\n12 - 2 = 10 (left: 10)\nNo possible next steps. (left: 10)\n"
                ],
                "values": [
                    60.0,
                    0,
                    0,
                    0,
                    0.003,
                    0.002
                ],
                "select_new_ys": [
                    "1 + 11 = 12 (left: 11 12 13)  \n13 - 11 = 2 (left: 12 2)\n12 * 2 = 24 (left: 24)\nAnswer: (1 + 11) * (13 - 11) = 24\n",
                    "1 + 13 = 14 (left: 11 11 14)  \n11 - 11 = 0 (left: 14 0)  \n14 / 0 = undefined (operation not possible)  \n\n",
                    "1 + 11 = 12 (left: 11 12 13)  \n13 - 11 = 2 (left: 12 2)\n12 - 2 = 10 (left: 10)\nNo possible next steps. (left: 10)\n"
                ]
            }
        ],
        "total_time": 167.7053918838501,
        "generate_time": 18.75632405281067,
        "evaluate_time": 148.94158387184143,
        "num_of_generations": 10,
        "num_of_evaluations": 73,
        "num_of_steps": 4,
        "idx": 905,
        "ys": [
            "1 + 11 = 12 (left: 11 12 13)  \n13 - 11 = 2 (left: 12 2)\n12 * 2 = 24 (left: 24)\nAnswer: (1 + 11) * (13 - 11) = 24\n",
            "1 + 13 = 14 (left: 11 11 14)  \n11 - 11 = 0 (left: 14 0)  \n14 / 0 = undefined (operation not possible)  \n\n",
            "1 + 11 = 12 (left: 11 12 13)  \n13 - 11 = 2 (left: 12 2)\n12 - 2 = 10 (left: 10)\nNo possible next steps. (left: 10)\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 193978,
            "prompt_tokens": 132277,
            "cost": 2.2704725
        },
        "sum(accs)": 1,
        "cnt_avg": 1.9999999999999998,
        "cnt_any": 4
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 8 10 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 8 = 9 (left: 9 10 11)\n",
                    "1 + 10 = 11 (left: 8 11 11)\n",
                    "1 + 11 = 12 (left: 8 10 12)\n",
                    "8 + 10 = 18 (left: 1 11 18)\n",
                    "8 + 11 = 19 (left: 1 10 19)\n",
                    "10 + 11 = 21 (left: 1 8 21)\n",
                    "8 - 1 = 7 (left: 7 10 11)\n",
                    "10 - 1 = 9 (left: 8 9 11)\n",
                    "11 - 1 = 10 (left: 8 10 10)\n",
                    "10 - 8 = 2 (left: 1 2 11)\n",
                    "11 - 8 = 3 (left: 1 3 10)\n",
                    "11 - 10 = 1 (left: 1 1 8)\n",
                    "8 / 1 = 8 (left: 8 10 11)\n",
                    "10 / 1 = 10 (left: 8 10 11)\n",
                    "11 / 1 = 11 (left: 8 10 11)\n",
                    "8 * 1 = 8 (left: 8 10 11)\n",
                    "10 * 1 = 10 (left: 8 10 11)\n",
                    "11 * 1 = 11 (left: 8 10 11)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "10 + 11 = 21 (left: 1 8 21)\n",
                    "1 + 8 = 9 (left: 9 10 11)\n",
                    "1 + 10 = 11 (left: 8 11 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 8 10 11",
                "ys": [
                    "10 + 11 = 21 (left: 1 8 21)\n",
                    "1 + 8 = 9 (left: 9 10 11)\n",
                    "1 + 10 = 11 (left: 8 11 11)\n"
                ],
                "new_ys": [
                    "10 + 11 = 21 (left: 1 8 21)\n1 + 8 = 9 (left: 9 21)\n",
                    "10 + 11 = 21 (left: 1 8 21)\n8 - 1 = 7 (left: 7 21)\n",
                    "10 + 11 = 21 (left: 1 8 21)\n21 - 8 = 13 (left: 1 13)\n",
                    "10 + 11 = 21 (left: 1 8 21)\n21 - 1 = 20 (left: 8 20)\n",
                    "10 + 11 = 21 (left: 1 8 21)\n21 / 7 = 3 (left: 1 3)\n",
                    "10 + 11 = 21 (left: 1 8 21)\n21 / 3 = 7 (left: 1 7)\n",
                    "10 + 11 = 21 (left: 1 8 21)\n8 / 1 = 8 (left: 8 21)\n",
                    "10 + 11 = 21 (left: 1 8 21)\n21 + 1 = 22 (left: 8 22)\n",
                    "10 + 11 = 21 (left: 1 8 21)\n21 + 8 = 29 (left: 1 29)\n",
                    "10 + 11 = 21 (left: 1 8 21)\n1 * 8 = 8 (left: 8 21)\n",
                    "10 + 11 = 21 (left: 1 8 21)\n8 * 1 = 8 (left: 8 21)\n",
                    "10 + 11 = 21 (left: 1 8 21)\n21 * 1 = 21 (left: 8 21)\n",
                    "10 + 11 = 21 (left: 1 8 21)\n21 * 8 = 168 (left: 1 168)\n",
                    "1 + 8 = 9 (left: 9 10 11)\n9 + 10 = 19 (left: 11 19)  \n",
                    "1 + 8 = 9 (left: 9 10 11)\n10 + 11 = 21 (left: 9 21)  \n",
                    "1 + 8 = 9 (left: 9 10 11)\n11 + 9 = 20 (left: 10 20)  \n",
                    "1 + 8 = 9 (left: 9 10 11)\n9 * 10 = 90 (left: 11 90)  \n",
                    "1 + 8 = 9 (left: 9 10 11)\n10 * 11 = 110 (left: 9 110)  \n",
                    "1 + 8 = 9 (left: 9 10 11)\n11 * 9 = 99 (left: 10 99)  \n",
                    "1 + 8 = 9 (left: 9 10 11)\n10 - 9 = 1 (left: 1 11)  \n",
                    "1 + 8 = 9 (left: 9 10 11)\n11 - 10 = 1 (left: 9 1)  \n",
                    "1 + 8 = 9 (left: 9 10 11)\n11 - 9 = 2 (left: 10 2)  \n",
                    "1 + 8 = 9 (left: 9 10 11)\n11 / 9 \u2248 1.22 (left: 10 1.22)  \n",
                    "1 + 8 = 9 (left: 9 10 11)\n11 / 10 = 1.1 (left: 9 1.1)  \n",
                    "1 + 8 = 9 (left: 9 10 11)\n10 / 9 \u2248 1.11 (left: 11 1.11)  \n",
                    "1 + 8 = 9 (left: 9 10 11)\n10 / 11 \u2248 0.91 (left: 9 0.91)  \n",
                    "1 + 8 = 9 (left: 9 10 11)\n9 / 10 = 0.9 (left: 11 0.9)  \n",
                    "1 + 8 = 9 (left: 9 10 11)\n9 / 11 \u2248 0.82 (left: 10 0.82)\n",
                    "1 + 10 = 11 (left: 8 11 11)\n8 + 11 = 19 (left: 11 19)\n",
                    "1 + 10 = 11 (left: 8 11 11)\n8 * 11 = 88 (left: 11 88)\n",
                    "1 + 10 = 11 (left: 8 11 11)\n11 - 8 = 3 (left: 11 3)\n",
                    "1 + 10 = 11 (left: 8 11 11)\n11 / 8 = 1.375 (left: 11 1.375)\n",
                    "1 + 10 = 11 (left: 8 11 11)\n11 + 11 = 22 (left: 8 22)\n",
                    "1 + 10 = 11 (left: 8 11 11)\n11 * 11 = 121 (left: 8 121)\n",
                    "1 + 10 = 11 (left: 8 11 11)\n11 - 11 = 0 (left: 8 0)\n",
                    "1 + 10 = 11 (left: 8 11 11)\n11 / 11 = 1 (left: 8 1)\n",
                    "1 + 10 = 11 (left: 8 11 11)\n8 + 11 = 19 (left: 11 19)\n",
                    "1 + 10 = 11 (left: 8 11 11)\n8 * 11 = 88 (left: 11 88)\n",
                    "1 + 10 = 11 (left: 8 11 11)\n11 - 8 = 3 (left: 11 3)\n",
                    "1 + 10 = 11 (left: 8 11 11)\n11 / 8 = 1.375 (left: 11 1.375)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.002,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.001,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.003,
                    0.0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "1 + 10 = 11 (left: 8 11 11)\n11 - 11 = 0 (left: 8 0)\n",
                    "10 + 11 = 21 (left: 1 8 21)\n21 / 3 = 7 (left: 1 7)\n",
                    "10 + 11 = 21 (left: 1 8 21)\n21 / 7 = 3 (left: 1 3)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 8 10 11",
                "ys": [
                    "1 + 10 = 11 (left: 8 11 11)\n11 - 11 = 0 (left: 8 0)\n",
                    "10 + 11 = 21 (left: 1 8 21)\n21 / 3 = 7 (left: 1 7)\n",
                    "10 + 11 = 21 (left: 1 8 21)\n21 / 7 = 3 (left: 1 3)\n"
                ],
                "new_ys": [
                    "1 + 10 = 11 (left: 8 11 11)\n11 - 11 = 0 (left: 8 0)\n8 + 0 = 8 (left: 8)  \n",
                    "1 + 10 = 11 (left: 8 11 11)\n11 - 11 = 0 (left: 8 0)\n8 - 0 = 8 (left: 8)  \n",
                    "1 + 10 = 11 (left: 8 11 11)\n11 - 11 = 0 (left: 8 0)\n8 * 0 = 0 (left: 0)  \n",
                    "1 + 10 = 11 (left: 8 11 11)\n11 - 11 = 0 (left: 8 0)\n8 / 0 is undefined\n",
                    "10 + 11 = 21 (left: 1 8 21)\n21 / 3 = 7 (left: 1 7)\n1 + 7 = 8 (left: 8)\n",
                    "10 + 11 = 21 (left: 1 8 21)\n21 / 3 = 7 (left: 1 7)\n7 - 1 = 6 (left: 6)\n",
                    "10 + 11 = 21 (left: 1 8 21)\n21 / 3 = 7 (left: 1 7)\n7 / 1 = 7 (left: 7)\n",
                    "10 + 11 = 21 (left: 1 8 21)\n21 / 3 = 7 (left: 1 7)\n1 * 7 = 7 (left: 7)\n",
                    "10 + 11 = 21 (left: 1 8 21)\n21 / 7 = 3 (left: 1 3)\n1 + 3 = 4 (left: 4)  \n",
                    "10 + 11 = 21 (left: 1 8 21)\n21 / 7 = 3 (left: 1 3)\n3 - 1 = 2 (left: 2)  \n",
                    "10 + 11 = 21 (left: 1 8 21)\n21 / 7 = 3 (left: 1 3)\n3 * 1 = 3 (left: 3)  \n",
                    "10 + 11 = 21 (left: 1 8 21)\n21 / 7 = 3 (left: 1 3)\n3 / 1 = 3 (left: 3)\n"
                ],
                "values": [
                    0.001,
                    0.001,
                    0.0,
                    0.003,
                    0.001,
                    0,
                    0.001,
                    0.001,
                    0.0,
                    0.0,
                    0.001,
                    0.001
                ],
                "select_new_ys": [
                    "1 + 10 = 11 (left: 8 11 11)\n11 - 11 = 0 (left: 8 0)\n8 / 0 is undefined\n",
                    "1 + 10 = 11 (left: 8 11 11)\n11 - 11 = 0 (left: 8 0)\n8 + 0 = 8 (left: 8)  \n",
                    "1 + 10 = 11 (left: 8 11 11)\n11 - 11 = 0 (left: 8 0)\n8 - 0 = 8 (left: 8)  \n"
                ]
            },
            {
                "step": 3,
                "x": "1 8 10 11",
                "ys": [
                    "1 + 10 = 11 (left: 8 11 11)\n11 - 11 = 0 (left: 8 0)\n8 / 0 is undefined\n",
                    "1 + 10 = 11 (left: 8 11 11)\n11 - 11 = 0 (left: 8 0)\n8 + 0 = 8 (left: 8)  \n",
                    "1 + 10 = 11 (left: 8 11 11)\n11 - 11 = 0 (left: 8 0)\n8 - 0 = 8 (left: 8)  \n"
                ],
                "new_ys": [
                    "1 + 10 = 11 (left: 8 11 11)\n11 - 11 = 0 (left: 8 0)\n8 / 0 is undefined\nNo possible next steps due to division by zero.\n",
                    "1 + 10 = 11 (left: 8 11 11)\n11 - 11 = 0 (left: 8 0)\n8 + 0 = 8 (left: 8)  \nNo further steps possible.\n",
                    "1 + 10 = 11 (left: 8 11 11)\n11 - 11 = 0 (left: 8 0)\n8 - 0 = 8 (left: 8)  \nN/A (left: 8)\n"
                ],
                "values": [
                    0,
                    0,
                    0.001
                ],
                "select_new_ys": [
                    "1 + 10 = 11 (left: 8 11 11)\n11 - 11 = 0 (left: 8 0)\n8 - 0 = 8 (left: 8)  \nN/A (left: 8)\n",
                    "1 + 10 = 11 (left: 8 11 11)\n11 - 11 = 0 (left: 8 0)\n8 / 0 is undefined\nNo possible next steps due to division by zero.\n",
                    "1 + 10 = 11 (left: 8 11 11)\n11 - 11 = 0 (left: 8 0)\n8 + 0 = 8 (left: 8)  \nNo further steps possible.\n"
                ]
            }
        ],
        "total_time": 126.75866484642029,
        "generate_time": 17.56710147857666,
        "evaluate_time": 109.18538999557495,
        "num_of_generations": 10,
        "num_of_evaluations": 73,
        "num_of_steps": 4,
        "idx": 906,
        "ys": [
            "1 + 10 = 11 (left: 8 11 11)\n11 - 11 = 0 (left: 8 0)\n8 - 0 = 8 (left: 8)  \nN/A (left: 8)\n",
            "1 + 10 = 11 (left: 8 11 11)\n11 - 11 = 0 (left: 8 0)\n8 / 0 is undefined\nNo possible next steps due to division by zero.\n",
            "1 + 10 = 11 (left: 8 11 11)\n11 - 11 = 0 (left: 8 0)\n8 + 0 = 8 (left: 8)  \nNo further steps possible.\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 214988,
            "prompt_tokens": 148683,
            "cost": 2.5215875
        },
        "sum(accs)": 0,
        "cnt_avg": 1.9999999999999998,
        "cnt_any": 4
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 6 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 3 = 5 (left: 5 6 9)\n",
                    "3 + 6 = 9 (left: 2 9 9)\n",
                    "6 + 9 = 15 (left: 2 3 15)\n",
                    "9 + 2 = 11 (left: 3 6 11)\n",
                    "2 * 3 = 6 (left: 6 6 9)\n",
                    "3 * 6 = 18 (left: 2 9 18)\n",
                    "6 * 9 = 54 (left: 2 3 54)\n",
                    "9 - 6 = 3 (left: 2 3 3)\n",
                    "9 - 3 = 6 (left: 2 6 6)\n",
                    "9 - 2 = 7 (left: 3 6 7)\n",
                    "6 - 3 = 3 (left: 2 3 3)\n",
                    "6 / 2 = 3 (left: 3 3 9)\n",
                    "9 / 3 = 3 (left: 2 3 6)\n",
                    "9 / 9 = 1 (left: 2 3 6)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    20.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "6 + 9 = 15 (left: 2 3 15)\n",
                    "2 * 3 = 6 (left: 6 6 9)\n",
                    "2 + 3 = 5 (left: 5 6 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 6 9",
                "ys": [
                    "6 + 9 = 15 (left: 2 3 15)\n",
                    "2 * 3 = 6 (left: 6 6 9)\n",
                    "2 + 3 = 5 (left: 5 6 9)\n"
                ],
                "new_ys": [
                    "6 + 9 = 15 (left: 2 3 15)\n2 + 3 = 5 (left: 5 15)\n",
                    "6 + 9 = 15 (left: 2 3 15)\n3 + 2 = 5 (left: 5 15)\n",
                    "6 + 9 = 15 (left: 2 3 15)\n15 + 2 = 17 (left: 3 17)\n",
                    "6 + 9 = 15 (left: 2 3 15)\n15 + 3 = 18 (left: 2 18)\n",
                    "6 + 9 = 15 (left: 2 3 15)\n2 * 3 = 6 (left: 6 15)\n",
                    "6 + 9 = 15 (left: 2 3 15)\n3 * 2 = 6 (left: 6 15)\n",
                    "6 + 9 = 15 (left: 2 3 15)\n15 - 2 = 13 (left: 3 13)\n",
                    "6 + 9 = 15 (left: 2 3 15)\n15 - 3 = 12 (left: 2 12)\n",
                    "6 + 9 = 15 (left: 2 3 15)\n15 / 3 = 5 (left: 2 5)\n",
                    "6 + 9 = 15 (left: 2 3 15)\n15 / 2 = 7.5 (left: 3 7.5)\n",
                    "6 + 9 = 15 (left: 2 3 15)\n3 - 2 = 1 (left: 1 15)\n",
                    "6 + 9 = 15 (left: 2 3 15)\n3 / 2 = 1.5 (left: 1.5 15)\n",
                    "2 * 3 = 6 (left: 6 6 9)\n6 + 6 = 12 (left: 9 12)\n",
                    "2 * 3 = 6 (left: 6 6 9)\n6 + 9 = 15 (left: 6 15)\n",
                    "2 * 3 = 6 (left: 6 6 9)\n6 * 6 = 36 (left: 9 36)\n",
                    "2 * 3 = 6 (left: 6 6 9)\n9 - 6 = 3 (left: 6 3)\n",
                    "2 * 3 = 6 (left: 6 6 9)\n9 + 6 = 15 (left: 6 15)\n",
                    "2 * 3 = 6 (left: 6 6 9)\n6 / 6 = 1 (left: 9 1)\n",
                    "2 * 3 = 6 (left: 6 6 9)\n9 / 3 = 3 (left: 6 3)\n",
                    "2 * 3 = 6 (left: 6 6 9)\n6 - 6 = 0 (left: 9 0)\n",
                    "2 * 3 = 6 (left: 6 6 9)\n6 * 9 = 54 (left: 6 54)\n",
                    "2 * 3 = 6 (left: 6 6 9)\n9 / 6 = 1.5 (left: 6 1.5)\n",
                    "2 + 3 = 5 (left: 5 6 9)\n5 + 6 = 11 (left: 9 11)\n",
                    "2 + 3 = 5 (left: 5 6 9)\n6 + 9 = 15 (left: 5 15)\n",
                    "2 + 3 = 5 (left: 5 6 9)\n9 + 5 = 14 (left: 6 14)\n",
                    "2 + 3 = 5 (left: 5 6 9)\n5 * 6 = 30 (left: 9 30)\n",
                    "2 + 3 = 5 (left: 5 6 9)\n6 * 9 = 54 (left: 5 54)\n",
                    "2 + 3 = 5 (left: 5 6 9)\n9 * 5 = 45 (left: 6 45)\n",
                    "2 + 3 = 5 (left: 5 6 9)\n6 - 5 = 1 (left: 9 1)\n",
                    "2 + 3 = 5 (left: 5 6 9)\n9 - 6 = 3 (left: 5 3)\n",
                    "2 + 3 = 5 (left: 5 6 9)\n9 - 5 = 4 (left: 6 4)\n",
                    "2 + 3 = 5 (left: 5 6 9)\n6 / 5 = 1.2 (left: 9 1.2)\n",
                    "2 + 3 = 5 (left: 5 6 9)\n9 / 6 = 1.5 (left: 5 1.5)\n",
                    "2 + 3 = 5 (left: 5 6 9)\n9 / 5 = 1.8 (left: 6 1.8)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.002,
                    20.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.002,
                    0.0,
                    0.001,
                    0.002,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.002,
                    0.0,
                    0.001,
                    0.001,
                    20.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "6 + 9 = 15 (left: 2 3 15)\n15 - 3 = 12 (left: 2 12)\n",
                    "2 + 3 = 5 (left: 5 6 9)\n9 - 5 = 4 (left: 6 4)\n",
                    "6 + 9 = 15 (left: 2 3 15)\n15 + 2 = 17 (left: 3 17)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 6 9",
                "ys": [
                    "6 + 9 = 15 (left: 2 3 15)\n15 - 3 = 12 (left: 2 12)\n",
                    "2 + 3 = 5 (left: 5 6 9)\n9 - 5 = 4 (left: 6 4)\n",
                    "6 + 9 = 15 (left: 2 3 15)\n15 + 2 = 17 (left: 3 17)\n"
                ],
                "new_ys": [
                    "6 + 9 = 15 (left: 2 3 15)\n15 - 3 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n",
                    "6 + 9 = 15 (left: 2 3 15)\n15 - 3 = 12 (left: 2 12)\n12 + 2 = 14 (left: 14)\n",
                    "6 + 9 = 15 (left: 2 3 15)\n15 - 3 = 12 (left: 2 12)\n12 / 2 = 6 (left: 6)\n",
                    "6 + 9 = 15 (left: 2 3 15)\n15 - 3 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "2 + 3 = 5 (left: 5 6 9)\n9 - 5 = 4 (left: 6 4)\n6 + 4 = 10 (left: 10)\n",
                    "2 + 3 = 5 (left: 5 6 9)\n9 - 5 = 4 (left: 6 4)\n6 - 4 = 2 (left: 2)\n",
                    "2 + 3 = 5 (left: 5 6 9)\n9 - 5 = 4 (left: 6 4)\n6 * 4 = 24 (left: 24)\n",
                    "2 + 3 = 5 (left: 5 6 9)\n9 - 5 = 4 (left: 6 4)\n6 / 4 = 1.5 (left: 1.5)\n",
                    "2 + 3 = 5 (left: 5 6 9)\n9 - 5 = 4 (left: 6 4)\n4 - 6 = -2 (left: -2)\n",
                    "2 + 3 = 5 (left: 5 6 9)\n9 - 5 = 4 (left: 6 4)\n4 / 6 = 0.6667 (left: 0.6667)\n",
                    "6 + 9 = 15 (left: 2 3 15)\n15 + 2 = 17 (left: 3 17)\n3 + 17 = 20 (left: 20)\n",
                    "6 + 9 = 15 (left: 2 3 15)\n15 + 2 = 17 (left: 3 17)\n17 - 3 = 14 (left: 14)\n",
                    "6 + 9 = 15 (left: 2 3 15)\n15 + 2 = 17 (left: 3 17)\n17 / 3 = 5.6667 (left: 5.6667)\n",
                    "6 + 9 = 15 (left: 2 3 15)\n15 + 2 = 17 (left: 3 17)\n3 * 17 = 51 (left: 51)\n",
                    "6 + 9 = 15 (left: 2 3 15)\n15 + 2 = 17 (left: 3 17)\n17 + 3 = 20 (left: 20)\n",
                    "6 + 9 = 15 (left: 2 3 15)\n15 + 2 = 17 (left: 3 17)\n3 - 17 = -14 (left: -14)\n",
                    "6 + 9 = 15 (left: 2 3 15)\n15 + 2 = 17 (left: 3 17)\n3 / 17 = 0.1765 (left: 0.1765)\n"
                ],
                "values": [
                    0.002,
                    0.0,
                    0,
                    60.0,
                    0.002,
                    0.0,
                    60.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "6 + 9 = 15 (left: 2 3 15)\n15 - 3 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "2 + 3 = 5 (left: 5 6 9)\n9 - 5 = 4 (left: 6 4)\n6 * 4 = 24 (left: 24)\n",
                    "6 + 9 = 15 (left: 2 3 15)\n15 - 3 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 3 6 9",
                "ys": [
                    "6 + 9 = 15 (left: 2 3 15)\n15 - 3 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "2 + 3 = 5 (left: 5 6 9)\n9 - 5 = 4 (left: 6 4)\n6 * 4 = 24 (left: 24)\n",
                    "6 + 9 = 15 (left: 2 3 15)\n15 - 3 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\n"
                ],
                "new_ys": [
                    "6 + 9 = 15 (left: 2 3 15)\n15 - 3 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (6 + 9 - 3) * 2 = 24\n",
                    "2 + 3 = 5 (left: 5 6 9)\n9 - 5 = 4 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: (2 + 3) * (9 - 5) = 24\n",
                    "6 + 9 = 15 (left: 2 3 15)\n15 - 3 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\nNo operations possible.\n"
                ],
                "values": [
                    60.0,
                    0.003,
                    0
                ],
                "select_new_ys": [
                    "6 + 9 = 15 (left: 2 3 15)\n15 - 3 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (6 + 9 - 3) * 2 = 24\n",
                    "2 + 3 = 5 (left: 5 6 9)\n9 - 5 = 4 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: (2 + 3) * (9 - 5) = 24\n",
                    "6 + 9 = 15 (left: 2 3 15)\n15 - 3 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\nNo operations possible.\n"
                ]
            }
        ],
        "total_time": 142.7142448425293,
        "generate_time": 14.828297853469849,
        "evaluate_time": 127.87855958938599,
        "num_of_generations": 10,
        "num_of_evaluations": 68,
        "num_of_steps": 4,
        "idx": 907,
        "ys": [
            "6 + 9 = 15 (left: 2 3 15)\n15 - 3 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (6 + 9 - 3) * 2 = 24\n",
            "2 + 3 = 5 (left: 5 6 9)\n9 - 5 = 4 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: (2 + 3) * (9 - 5) = 24\n",
            "6 + 9 = 15 (left: 2 3 15)\n15 - 3 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)\nNo operations possible.\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 238730,
            "prompt_tokens": 166046,
            "cost": 2.802415
        },
        "sum(accs)": 1,
        "cnt_avg": 2.333333333333333,
        "cnt_any": 5
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 3 5 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 3 = 4 (left: 4 5 9)  \n",
                    "3 + 5 = 8 (left: 1 8 9)  \n",
                    "5 + 9 = 14 (left: 1 3 14)  \n",
                    "9 - 1 = 8 (left: 3 5 8)  \n",
                    "9 - 3 = 6 (left: 1 5 6)  \n",
                    "9 - 5 = 4 (left: 1 3 4)  \n",
                    "5 - 3 = 2 (left: 1 2 9)  \n",
                    "3 - 1 = 2 (left: 2 5 9)  \n",
                    "5 - 1 = 4 (left: 3 4 9)  \n",
                    "9 / 3 = 3 (left: 1 3 5)  \n",
                    "9 / 1 = 9 (left: 3 5 9)  \n",
                    "5 / 1 = 5 (left: 3 5 9)  \n",
                    "3 * 1 = 3 (left: 3 5 9)  \n",
                    "5 * 1 = 5 (left: 3 5 9)  \n",
                    "9 * 1 = 9 (left: 3 5 9)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    1.002,
                    0.0,
                    0.0,
                    0.0,
                    0.003,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "5 + 9 = 14 (left: 1 3 14)  \n",
                    "3 - 1 = 2 (left: 2 5 9)  \n",
                    "5 - 3 = 2 (left: 1 2 9)  \n"
                ]
            },
            {
                "step": 1,
                "x": "1 3 5 9",
                "ys": [
                    "5 + 9 = 14 (left: 1 3 14)  \n",
                    "3 - 1 = 2 (left: 2 5 9)  \n",
                    "5 - 3 = 2 (left: 1 2 9)  \n"
                ],
                "new_ys": [
                    "5 + 9 = 14 (left: 1 3 14)  \n1 + 3 = 4 (left: 4 14)  \n",
                    "5 + 9 = 14 (left: 1 3 14)  \n3 - 1 = 2 (left: 2 14)  \n",
                    "5 + 9 = 14 (left: 1 3 14)  \n14 - 3 = 11 (left: 1 11)  \n",
                    "5 + 9 = 14 (left: 1 3 14)  \n14 + 1 = 15 (left: 3 15)  \n",
                    "5 + 9 = 14 (left: 1 3 14)  \n3 * 1 = 3 (left: 3 14)  \n",
                    "5 + 9 = 14 (left: 1 3 14)  \n14 - 1 = 13 (left: 3 13)  \n",
                    "5 + 9 = 14 (left: 1 3 14)  \n3 + 1 = 4 (left: 4 14)  \n",
                    "5 + 9 = 14 (left: 1 3 14)  \n14 / 1 = 14 (left: 3 14)  \n",
                    "5 + 9 = 14 (left: 1 3 14)  \n14 / 3 \u2248 4.67 (left: 1 4.67)  \n",
                    "5 + 9 = 14 (left: 1 3 14)  \n14 * 1 = 14 (left: 3 14)\n",
                    "3 - 1 = 2 (left: 2 5 9)  \n2 + 5 = 7 (left: 7 9)\n",
                    "3 - 1 = 2 (left: 2 5 9)  \n5 + 9 = 14 (left: 2 14)\n",
                    "3 - 1 = 2 (left: 2 5 9)  \n9 - 5 = 4 (left: 2 4)\n",
                    "3 - 1 = 2 (left: 2 5 9)  \n9 - 2 = 7 (left: 5 7)\n",
                    "3 - 1 = 2 (left: 2 5 9)  \n5 - 2 = 3 (left: 3 9)\n",
                    "3 - 1 = 2 (left: 2 5 9)  \n9 / 3 = 3 (left: 2 3)\n",
                    "3 - 1 = 2 (left: 2 5 9)  \n5 * 2 = 10 (left: 9 10)\n",
                    "3 - 1 = 2 (left: 2 5 9)  \n9 / 2 = 4.5 (left: 4.5 5)\n",
                    "5 - 3 = 2 (left: 1 2 9)  \n1 + 2 = 3 (left: 3 9)\n",
                    "5 - 3 = 2 (left: 1 2 9)  \n9 - 1 = 8 (left: 2 8)\n",
                    "5 - 3 = 2 (left: 1 2 9)  \n9 - 2 = 7 (left: 1 7)\n",
                    "5 - 3 = 2 (left: 1 2 9)  \n9 / 1 = 9 (left: 2 9)\n",
                    "5 - 3 = 2 (left: 1 2 9)  \n9 / 3 = 3 (left: 1 3)\n",
                    "5 - 3 = 2 (left: 1 2 9)  \n9 * 2 = 18 (left: 1 18)\n",
                    "5 - 3 = 2 (left: 1 2 9)  \n1 + 9 = 10 (left: 2 10)\n",
                    "5 - 3 = 2 (left: 1 2 9)  \n2 * 9 = 18 (left: 1 18)\n",
                    "5 - 3 = 2 (left: 1 2 9)  \n9 + 2 = 11 (left: 1 11)\n",
                    "5 - 3 = 2 (left: 1 2 9)  \n1 * 9 = 9 (left: 2 9)\n",
                    "5 - 3 = 2 (left: 1 2 9)  \n2 - 1 = 1 (left: 1 9)\n"
                ],
                "values": [
                    0.0,
                    20.0,
                    0.001,
                    0.0,
                    0.001,
                    0.002,
                    0.0,
                    0.001,
                    0.0,
                    0.001,
                    0.0,
                    20.0,
                    0.002,
                    0.001,
                    1.0,
                    0.002,
                    0.001,
                    0.0,
                    1.0,
                    0.0,
                    0.002,
                    0.0,
                    0.001,
                    0.003,
                    0.0,
                    0.003,
                    0.001,
                    0.0,
                    0.002
                ],
                "select_new_ys": [
                    "5 + 9 = 14 (left: 1 3 14)  \n3 - 1 = 2 (left: 2 14)  \n",
                    "3 - 1 = 2 (left: 2 5 9)  \n5 + 9 = 14 (left: 2 14)\n",
                    "3 - 1 = 2 (left: 2 5 9)  \n5 - 2 = 3 (left: 3 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 3 5 9",
                "ys": [
                    "5 + 9 = 14 (left: 1 3 14)  \n3 - 1 = 2 (left: 2 14)  \n",
                    "3 - 1 = 2 (left: 2 5 9)  \n5 + 9 = 14 (left: 2 14)\n",
                    "3 - 1 = 2 (left: 2 5 9)  \n5 - 2 = 3 (left: 3 9)\n"
                ],
                "new_ys": [
                    "5 + 9 = 14 (left: 1 3 14)  \n3 - 1 = 2 (left: 2 14)  \n2 + 14 = 16 (left: 16)\n",
                    "5 + 9 = 14 (left: 1 3 14)  \n3 - 1 = 2 (left: 2 14)  \n14 - 2 = 12 (left: 12)\n",
                    "5 + 9 = 14 (left: 1 3 14)  \n3 - 1 = 2 (left: 2 14)  \n14 / 2 = 7 (left: 7)\n",
                    "5 + 9 = 14 (left: 1 3 14)  \n3 - 1 = 2 (left: 2 14)  \n2 * 14 = 28 (left: 28)\n",
                    "3 - 1 = 2 (left: 2 5 9)  \n5 + 9 = 14 (left: 2 14)\n14 + 2 = 16 (left: 16)\n",
                    "3 - 1 = 2 (left: 2 5 9)  \n5 + 9 = 14 (left: 2 14)\n14 - 2 = 12 (left: 12)\n",
                    "3 - 1 = 2 (left: 2 5 9)  \n5 + 9 = 14 (left: 2 14)\n14 * 2 = 28 (left: 28)\n",
                    "3 - 1 = 2 (left: 2 5 9)  \n5 + 9 = 14 (left: 2 14)\n14 / 2 = 7 (left: 7)\n",
                    "3 - 1 = 2 (left: 2 5 9)  \n5 + 9 = 14 (left: 2 14)\n2 + 14 = 16 (left: 16)\n",
                    "3 - 1 = 2 (left: 2 5 9)  \n5 + 9 = 14 (left: 2 14)\n2 - 14 = -12 (left: -12)\n",
                    "3 - 1 = 2 (left: 2 5 9)  \n5 + 9 = 14 (left: 2 14)\n2 * 14 = 28 (left: 28)\n",
                    "3 - 1 = 2 (left: 2 5 9)  \n5 + 9 = 14 (left: 2 14)\n2 / 14 = 0.14285714285714285 (left: 0.14285714285714285)\n",
                    "3 - 1 = 2 (left: 2 5 9)  \n5 - 2 = 3 (left: 3 9)\n3 + 9 = 12 (left: 12)\n",
                    "3 - 1 = 2 (left: 2 5 9)  \n5 - 2 = 3 (left: 3 9)\n9 - 3 = 6 (left: 6)\n",
                    "3 - 1 = 2 (left: 2 5 9)  \n5 - 2 = 3 (left: 3 9)\n9 / 3 = 3 (left: 3)\n",
                    "3 - 1 = 2 (left: 2 5 9)  \n5 - 2 = 3 (left: 3 9)\n3 * 9 = 27 (left: 27)\n"
                ],
                "values": [
                    0.0,
                    0.001,
                    0.001,
                    0,
                    0.0,
                    0.001,
                    0,
                    0.001,
                    0.0,
                    0,
                    0,
                    0.0,
                    0.001,
                    0,
                    0.001,
                    0.0
                ],
                "select_new_ys": [
                    "5 + 9 = 14 (left: 1 3 14)  \n3 - 1 = 2 (left: 2 14)  \n14 - 2 = 12 (left: 12)\n",
                    "5 + 9 = 14 (left: 1 3 14)  \n3 - 1 = 2 (left: 2 14)  \n14 / 2 = 7 (left: 7)\n",
                    "3 - 1 = 2 (left: 2 5 9)  \n5 + 9 = 14 (left: 2 14)\n14 - 2 = 12 (left: 12)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 3 5 9",
                "ys": [
                    "5 + 9 = 14 (left: 1 3 14)  \n3 - 1 = 2 (left: 2 14)  \n14 - 2 = 12 (left: 12)\n",
                    "5 + 9 = 14 (left: 1 3 14)  \n3 - 1 = 2 (left: 2 14)  \n14 / 2 = 7 (left: 7)\n",
                    "3 - 1 = 2 (left: 2 5 9)  \n5 + 9 = 14 (left: 2 14)\n14 - 2 = 12 (left: 12)\n"
                ],
                "new_ys": [
                    "5 + 9 = 14 (left: 1 3 14)  \n3 - 1 = 2 (left: 2 14)  \n14 - 2 = 12 (left: 12)\nNo possible next steps.\n",
                    "5 + 9 = 14 (left: 1 3 14)  \n3 - 1 = 2 (left: 2 14)  \n14 / 2 = 7 (left: 7)\nNo possible next steps.\n",
                    "3 - 1 = 2 (left: 2 5 9)  \n5 + 9 = 14 (left: 2 14)\n14 - 2 = 12 (left: 12)\nNo possible next steps.\n"
                ],
                "values": [
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "5 + 9 = 14 (left: 1 3 14)  \n3 - 1 = 2 (left: 2 14)  \n14 - 2 = 12 (left: 12)\nNo possible next steps.\n",
                    "5 + 9 = 14 (left: 1 3 14)  \n3 - 1 = 2 (left: 2 14)  \n14 / 2 = 7 (left: 7)\nNo possible next steps.\n",
                    "3 - 1 = 2 (left: 2 5 9)  \n5 + 9 = 14 (left: 2 14)\n14 - 2 = 12 (left: 12)\nNo possible next steps.\n"
                ]
            }
        ],
        "total_time": 89.74527192115784,
        "generate_time": 13.54348349571228,
        "evaluate_time": 76.18367314338684,
        "num_of_generations": 10,
        "num_of_evaluations": 63,
        "num_of_steps": 4,
        "idx": 908,
        "ys": [
            "5 + 9 = 14 (left: 1 3 14)  \n3 - 1 = 2 (left: 2 14)  \n14 - 2 = 12 (left: 12)\nNo possible next steps.\n",
            "5 + 9 = 14 (left: 1 3 14)  \n3 - 1 = 2 (left: 2 14)  \n14 / 2 = 7 (left: 7)\nNo possible next steps.\n",
            "3 - 1 = 2 (left: 2 5 9)  \n5 + 9 = 14 (left: 2 14)\n14 - 2 = 12 (left: 12)\nNo possible next steps.\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 253263,
            "prompt_tokens": 177101,
            "cost": 2.9753825000000003
        },
        "sum(accs)": 0,
        "cnt_avg": 2.333333333333333,
        "cnt_any": 5
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 3 7 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "3 + 3 = 6 (left: 6 7 12)\n",
                    "3 * 3 = 9 (left: 7 9 12)\n",
                    "7 + 3 = 10 (left: 3 10 12)\n",
                    "12 + 3 = 15 (left: 3 7 15)\n",
                    "12 - 3 = 9 (left: 3 7 9)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n",
                    "12 - 7 = 5 (left: 3 3 5)\n",
                    "7 * 3 = 21 (left: 3 12 21)\n",
                    "12 / 3 = 4 (left: 3 7 4)\n",
                    "7 / 3 = 2.333... (left: 3 3 2.333...)\n",
                    "12 / 7 = 1.714... (left: 3 3 1.714...)\n",
                    "7 + 7 = 14 (left: 3 3 14)\n",
                    "12 - 12 = 0 (left: 3 3 7)\n",
                    "3 / 3 = 1 (left: 1 7 12)\n"
                ],
                "values": [
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    20.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "7 - 3 = 4 (left: 3 4 12)\n",
                    "3 * 3 = 9 (left: 7 9 12)\n",
                    "3 + 3 = 6 (left: 6 7 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 3 7 12",
                "ys": [
                    "7 - 3 = 4 (left: 3 4 12)\n",
                    "3 * 3 = 9 (left: 7 9 12)\n",
                    "3 + 3 = 6 (left: 6 7 12)\n"
                ],
                "new_ys": [
                    "7 - 3 = 4 (left: 3 4 12)\n3 + 4 = 7 (left: 7 12)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n4 + 3 = 7 (left: 7 12)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n12 + 3 = 15 (left: 4 15)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n12 + 4 = 16 (left: 3 16)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n12 - 3 = 9 (left: 4 9)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n4 - 3 = 1 (left: 1 12)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n12 / 3 = 4 (left: 4 4)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n12 / 4 = 3 (left: 3 3)\n",
                    "3 * 3 = 9 (left: 7 9 12)\n7 + 9 = 16 (left: 12 16)\n",
                    "3 * 3 = 9 (left: 7 9 12)\n9 + 12 = 21 (left: 7 21)\n",
                    "3 * 3 = 9 (left: 7 9 12)\n12 + 7 = 19 (left: 9 19)\n",
                    "3 * 3 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n",
                    "3 * 3 = 9 (left: 7 9 12)\n12 - 9 = 3 (left: 3 7)\n",
                    "3 * 3 = 9 (left: 7 9 12)\n12 - 7 = 5 (left: 5 9)\n",
                    "3 * 3 = 9 (left: 7 9 12)\n9 - 12 = -3 (left: 7 -3)\n",
                    "3 * 3 = 9 (left: 7 9 12)\n12 / 9 = 1.333 (left: 7 1.333)\n",
                    "3 * 3 = 9 (left: 7 9 12)\n12 / 7 = 1.714 (left: 9 1.714)\n",
                    "3 * 3 = 9 (left: 7 9 12)\n9 / 7 = 1.286 (left: 12 1.286)\n",
                    "3 * 3 = 9 (left: 7 9 12)\n12 * 7 = 84 (left: 9 84)\n",
                    "3 * 3 = 9 (left: 7 9 12)\n9 * 7 = 63 (left: 12 63)\n",
                    "3 * 3 = 9 (left: 7 9 12)\n12 * 9 = 108 (left: 7 108)\n",
                    "3 + 3 = 6 (left: 6 7 12)\n6 + 7 = 13 (left: 12 13)\n",
                    "3 + 3 = 6 (left: 6 7 12)\n7 + 12 = 19 (left: 6 19)\n",
                    "3 + 3 = 6 (left: 6 7 12)\n12 + 6 = 18 (left: 7 18)\n",
                    "3 + 3 = 6 (left: 6 7 12)\n6 * 7 = 42 (left: 12 42)\n",
                    "3 + 3 = 6 (left: 6 7 12)\n7 * 12 = 84 (left: 6 84)\n",
                    "3 + 3 = 6 (left: 6 7 12)\n12 * 6 = 72 (left: 7 72)\n",
                    "3 + 3 = 6 (left: 6 7 12)\n7 - 6 = 1 (left: 12 1)\n",
                    "3 + 3 = 6 (left: 6 7 12)\n12 - 7 = 5 (left: 6 5)\n",
                    "3 + 3 = 6 (left: 6 7 12)\n12 - 6 = 6 (left: 7 6)\n",
                    "3 + 3 = 6 (left: 6 7 12)\n12 / 6 = 2 (left: 7 2)\n",
                    "3 + 3 = 6 (left: 6 7 12)\n12 / 7 = 1.714 (left: 6 1.714)\n",
                    "3 + 3 = 6 (left: 6 7 12)\n7 / 6 = 1.167 (left: 12 1.167)\n",
                    "3 + 3 = 6 (left: 6 7 12)\n6 / 7 = 0.857 (left: 12 0.857)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    0.0,
                    0.0,
                    60.0,
                    60.0,
                    0.001,
                    20.0,
                    0.001,
                    0.001,
                    0.001,
                    1.001,
                    0.0,
                    0.0,
                    20.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.001,
                    0.001,
                    0.0,
                    0.0,
                    0.002,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "7 - 3 = 4 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 3 7 12",
                "ys": [
                    "7 - 3 = 4 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n"
                ],
                "new_ys": [
                    "7 - 3 = 4 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5)\n"
                ],
                "values": [
                    60.0,
                    0.0,
                    0.0,
                    0.0,
                    60.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    60.0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "7 - 3 = 4 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 3 7 12",
                "ys": [
                    "7 - 3 = 4 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "7 - 3 = 4 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((7 - 3) * 3) + 12 = 24\n",
                    "7 - 3 = 4 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((7 - 3) * 3) + 12 = 24\n",
                    "7 - 3 = 4 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (12 - (7 - 3)) = 24\n"
                ],
                "values": [
                    0.003,
                    0.003,
                    60.0
                ],
                "select_new_ys": [
                    "7 - 3 = 4 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (12 - (7 - 3)) = 24\n",
                    "7 - 3 = 4 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((7 - 3) * 3) + 12 = 24\n",
                    "7 - 3 = 4 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((7 - 3) * 3) + 12 = 24\n"
                ]
            }
        ],
        "total_time": 156.4449450969696,
        "generate_time": 21.79150700569153,
        "evaluate_time": 134.64871859550476,
        "num_of_generations": 10,
        "num_of_evaluations": 68,
        "num_of_steps": 4,
        "idx": 909,
        "ys": [
            "7 - 3 = 4 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (12 - (7 - 3)) = 24\n",
            "7 - 3 = 4 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((7 - 3) * 3) + 12 = 24\n",
            "7 - 3 = 4 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((7 - 3) * 3) + 12 = 24\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 278173,
            "prompt_tokens": 196653,
            "cost": 3.2733625
        },
        "sum(accs)": 3,
        "cnt_avg": 3.333333333333333,
        "cnt_any": 6
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 5 7 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 5 = 9 (left: 7 9 9)  \n",
                    "4 * 5 = 20 (left: 7 9 20)  \n",
                    "5 + 7 = 12 (left: 4 9 12)  \n",
                    "5 * 7 = 35 (left: 4 9 35)  \n",
                    "7 + 9 = 16 (left: 4 5 16)  \n",
                    "7 * 9 = 63 (left: 4 5 63)  \n",
                    "9 + 4 = 13 (left: 5 7 13)  \n",
                    "9 * 4 = 36 (left: 5 7 36)  \n",
                    "5 - 4 = 1 (left: 1 7 9)  \n",
                    "7 - 4 = 3 (left: 3 5 9)  \n",
                    "9 - 4 = 5 (left: 5 5 7)  \n",
                    "7 - 5 = 2 (left: 2 4 9)  \n",
                    "9 - 5 = 4 (left: 4 4 7)  \n",
                    "9 - 7 = 2 (left: 2 4 5)  \n",
                    "5 / 4 = 1.25 (left: 1.25 7 9)  \n",
                    "9 / 7 = 1.2857 (left: 4 5 1.2857)  \n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    20.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "9 + 4 = 13 (left: 5 7 13)  \n",
                    "7 - 5 = 2 (left: 2 4 9)  \n",
                    "4 + 5 = 9 (left: 7 9 9)  \n"
                ]
            },
            {
                "step": 1,
                "x": "4 5 7 9",
                "ys": [
                    "9 + 4 = 13 (left: 5 7 13)  \n",
                    "7 - 5 = 2 (left: 2 4 9)  \n",
                    "4 + 5 = 9 (left: 7 9 9)  \n"
                ],
                "new_ys": [
                    "9 + 4 = 13 (left: 5 7 13)  \n5 + 7 = 12 (left: 12 13)\n",
                    "9 + 4 = 13 (left: 5 7 13)  \n7 - 5 = 2 (left: 2 13)\n",
                    "9 + 4 = 13 (left: 5 7 13)  \n13 - 7 = 6 (left: 5 6)\n",
                    "9 + 4 = 13 (left: 5 7 13)  \n13 + 5 = 18 (left: 7 18)\n",
                    "9 + 4 = 13 (left: 5 7 13)  \n5 * 7 = 35 (left: 13 35)\n",
                    "9 + 4 = 13 (left: 5 7 13)  \n13 - 5 = 8 (left: 7 8)\n",
                    "9 + 4 = 13 (left: 5 7 13)  \n13 / 7 = 1.857 (left: 5 1.857)\n",
                    "9 + 4 = 13 (left: 5 7 13)  \n13 / 5 = 2.6 (left: 7 2.6)\n",
                    "7 - 5 = 2 (left: 2 4 9)  \n2 + 4 = 6 (left: 6 9)\n",
                    "7 - 5 = 2 (left: 2 4 9)  \n4 + 9 = 13 (left: 2 13)\n",
                    "7 - 5 = 2 (left: 2 4 9)  \n9 + 2 = 11 (left: 4 11)\n",
                    "7 - 5 = 2 (left: 2 4 9)  \n2 * 4 = 8 (left: 8 9)\n",
                    "7 - 5 = 2 (left: 2 4 9)  \n4 * 9 = 36 (left: 2 36)\n",
                    "7 - 5 = 2 (left: 2 4 9)  \n9 * 2 = 18 (left: 4 18)\n",
                    "7 - 5 = 2 (left: 2 4 9)  \n4 - 2 = 2 (left: 2 9)\n",
                    "7 - 5 = 2 (left: 2 4 9)  \n9 - 4 = 5 (left: 2 5)\n",
                    "7 - 5 = 2 (left: 2 4 9)  \n9 - 2 = 7 (left: 4 7)\n",
                    "7 - 5 = 2 (left: 2 4 9)  \n4 / 2 = 2 (left: 2 9)\n",
                    "7 - 5 = 2 (left: 2 4 9)  \n9 / 3 = 3 (left: 2 4 3)\n",
                    "7 - 5 = 2 (left: 2 4 9)  \n9 / 1 = 9 (left: 2 4 9)\n",
                    "4 + 5 = 9 (left: 7 9 9)  \n7 + 9 = 16 (left: 9 16)\n",
                    "4 + 5 = 9 (left: 7 9 9)  \n9 / 9 = 1 (left: 7 1)\n",
                    "4 + 5 = 9 (left: 7 9 9)  \n9 - 7 = 2 (left: 9 2)\n",
                    "4 + 5 = 9 (left: 7 9 9)  \n9 - 9 = 0 (left: 7 0)\n",
                    "4 + 5 = 9 (left: 7 9 9)  \n9 + 9 = 18 (left: 7 18)\n",
                    "4 + 5 = 9 (left: 7 9 9)  \n9 / 7 = 1.2857 (left: 9 1.2857)\n",
                    "4 + 5 = 9 (left: 7 9 9)  \n9 - 7 = 2 (left: 9 2)\n",
                    "4 + 5 = 9 (left: 7 9 9)  \n9 + 7 = 16 (left: 9 16)\n",
                    "4 + 5 = 9 (left: 7 9 9)  \n9 * 7 = 63 (left: 9 63)\n",
                    "4 + 5 = 9 (left: 7 9 9)  \n9 / 7 = 1.2857 (left: 9 1.2857)\n",
                    "4 + 5 = 9 (left: 7 9 9)  \n9 * 9 = 81 (left: 7 81)\n",
                    "4 + 5 = 9 (left: 7 9 9)  \n9 - 9 = 0 (left: 7 0)\n"
                ],
                "values": [
                    0.001,
                    20.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    20.0,
                    0.001,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.003,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    0
                ],
                "select_new_ys": [
                    "9 + 4 = 13 (left: 5 7 13)  \n7 - 5 = 2 (left: 2 13)\n",
                    "7 - 5 = 2 (left: 2 4 9)  \n4 + 9 = 13 (left: 2 13)\n",
                    "7 - 5 = 2 (left: 2 4 9)  \n9 / 1 = 9 (left: 2 4 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 5 7 9",
                "ys": [
                    "9 + 4 = 13 (left: 5 7 13)  \n7 - 5 = 2 (left: 2 13)\n",
                    "7 - 5 = 2 (left: 2 4 9)  \n4 + 9 = 13 (left: 2 13)\n",
                    "7 - 5 = 2 (left: 2 4 9)  \n9 / 1 = 9 (left: 2 4 9)\n"
                ],
                "new_ys": [
                    "9 + 4 = 13 (left: 5 7 13)  \n7 - 5 = 2 (left: 2 13)\n2 + 13 = 15 (left: 15)\n",
                    "9 + 4 = 13 (left: 5 7 13)  \n7 - 5 = 2 (left: 2 13)\n13 - 2 = 11 (left: 11)\n",
                    "9 + 4 = 13 (left: 5 7 13)  \n7 - 5 = 2 (left: 2 13)\n13 / 2 = 6.5 (left: 6.5)\n",
                    "9 + 4 = 13 (left: 5 7 13)  \n7 - 5 = 2 (left: 2 13)\n2 * 13 = 26 (left: 26)\n",
                    "7 - 5 = 2 (left: 2 4 9)  \n4 + 9 = 13 (left: 2 13)\n2 + 13 = 15 (left: 15)  \n",
                    "7 - 5 = 2 (left: 2 4 9)  \n4 + 9 = 13 (left: 2 13)\n13 - 2 = 11 (left: 11)  \n",
                    "7 - 5 = 2 (left: 2 4 9)  \n4 + 9 = 13 (left: 2 13)\n13 / 2 = 6.5 (left: 6.5)  \n",
                    "7 - 5 = 2 (left: 2 4 9)  \n4 + 9 = 13 (left: 2 13)\n2 * 13 = 26 (left: 26)\n",
                    "7 - 5 = 2 (left: 2 4 9)  \n9 / 1 = 9 (left: 2 4 9)\n2 + 4 = 6 (left: 6 9)\n",
                    "7 - 5 = 2 (left: 2 4 9)  \n9 / 1 = 9 (left: 2 4 9)\n4 + 2 = 6 (left: 6 9)\n",
                    "7 - 5 = 2 (left: 2 4 9)  \n9 / 1 = 9 (left: 2 4 9)\n9 + 2 = 11 (left: 4 11)\n",
                    "7 - 5 = 2 (left: 2 4 9)  \n9 / 1 = 9 (left: 2 4 9)\n9 + 4 = 13 (left: 2 13)\n",
                    "7 - 5 = 2 (left: 2 4 9)  \n9 / 1 = 9 (left: 2 4 9)\n2 * 4 = 8 (left: 8 9)\n",
                    "7 - 5 = 2 (left: 2 4 9)  \n9 / 1 = 9 (left: 2 4 9)\n2 * 9 = 18 (left: 4 18)\n",
                    "7 - 5 = 2 (left: 2 4 9)  \n9 / 1 = 9 (left: 2 4 9)\n4 * 9 = 36 (left: 2 36)\n",
                    "7 - 5 = 2 (left: 2 4 9)  \n9 / 1 = 9 (left: 2 4 9)\n4 - 2 = 2 (left: 2 2 9)\n",
                    "7 - 5 = 2 (left: 2 4 9)  \n9 / 1 = 9 (left: 2 4 9)\n9 - 2 = 7 (left: 4 7)\n",
                    "7 - 5 = 2 (left: 2 4 9)  \n9 / 1 = 9 (left: 2 4 9)\n9 - 4 = 5 (left: 2 5)\n",
                    "7 - 5 = 2 (left: 2 4 9)  \n9 / 1 = 9 (left: 2 4 9)\n9 / 3 = 3 (left: 2 4 3)\n",
                    "7 - 5 = 2 (left: 2 4 9)  \n9 / 1 = 9 (left: 2 4 9)\n4 / 2 = 2 (left: 2 2 9)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    20.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "7 - 5 = 2 (left: 2 4 9)  \n9 / 1 = 9 (left: 2 4 9)\n9 + 4 = 13 (left: 2 13)\n",
                    "7 - 5 = 2 (left: 2 4 9)  \n9 / 1 = 9 (left: 2 4 9)\n9 + 2 = 11 (left: 4 11)\n",
                    "7 - 5 = 2 (left: 2 4 9)  \n9 / 1 = 9 (left: 2 4 9)\n2 * 9 = 18 (left: 4 18)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 5 7 9",
                "ys": [
                    "7 - 5 = 2 (left: 2 4 9)  \n9 / 1 = 9 (left: 2 4 9)\n9 + 4 = 13 (left: 2 13)\n",
                    "7 - 5 = 2 (left: 2 4 9)  \n9 / 1 = 9 (left: 2 4 9)\n9 + 2 = 11 (left: 4 11)\n",
                    "7 - 5 = 2 (left: 2 4 9)  \n9 / 1 = 9 (left: 2 4 9)\n2 * 9 = 18 (left: 4 18)\n"
                ],
                "new_ys": [
                    "7 - 5 = 2 (left: 2 4 9)  \n9 / 1 = 9 (left: 2 4 9)\n9 + 4 = 13 (left: 2 13)\n2 + 13 = 15 (left: 15)\n",
                    "7 - 5 = 2 (left: 2 4 9)  \n9 / 1 = 9 (left: 2 4 9)\n9 + 4 = 13 (left: 2 13)\n13 - 2 = 11 (left: 11)\n",
                    "7 - 5 = 2 (left: 2 4 9)  \n9 / 1 = 9 (left: 2 4 9)\n9 + 4 = 13 (left: 2 13)\n13 / 2 = 6.5 (left: 6.5)\n",
                    "7 - 5 = 2 (left: 2 4 9)  \n9 / 1 = 9 (left: 2 4 9)\n9 + 4 = 13 (left: 2 13)\n2 * 13 = 26 (left: 26)\n",
                    "7 - 5 = 2 (left: 2 4 9)  \n9 / 1 = 9 (left: 2 4 9)\n9 + 2 = 11 (left: 4 11)\n4 + 11 = 15 (left: 15)\n",
                    "7 - 5 = 2 (left: 2 4 9)  \n9 / 1 = 9 (left: 2 4 9)\n9 + 2 = 11 (left: 4 11)\n11 - 4 = 7 (left: 7)\n",
                    "7 - 5 = 2 (left: 2 4 9)  \n9 / 1 = 9 (left: 2 4 9)\n9 + 2 = 11 (left: 4 11)\n11 / 4 = 2.75 (left: 2.75)\n",
                    "7 - 5 = 2 (left: 2 4 9)  \n9 / 1 = 9 (left: 2 4 9)\n9 + 2 = 11 (left: 4 11)\n4 * 11 = 44 (left: 44)\n",
                    "7 - 5 = 2 (left: 2 4 9)  \n9 / 1 = 9 (left: 2 4 9)\n9 + 2 = 11 (left: 4 11)\n11 / 4 = 2 (left: 2)\n",
                    "7 - 5 = 2 (left: 2 4 9)  \n9 / 1 = 9 (left: 2 4 9)\n9 + 2 = 11 (left: 4 11)\n4 - 11 = -7 (left: -7)\n",
                    "7 - 5 = 2 (left: 2 4 9)  \n9 / 1 = 9 (left: 2 4 9)\n2 * 9 = 18 (left: 4 18)\n18 / 4 = 4.5 (left: 4 4.5)  \n",
                    "7 - 5 = 2 (left: 2 4 9)  \n9 / 1 = 9 (left: 2 4 9)\n2 * 9 = 18 (left: 4 18)\n18 - 4 = 14 (left: 4 14)  \n",
                    "7 - 5 = 2 (left: 2 4 9)  \n9 / 1 = 9 (left: 2 4 9)\n2 * 9 = 18 (left: 4 18)\n4 + 18 = 22 (left: 22)  \n",
                    "7 - 5 = 2 (left: 2 4 9)  \n9 / 1 = 9 (left: 2 4 9)\n2 * 9 = 18 (left: 4 18)\n4 * 18 = 72 (left: 72)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0,
                    0,
                    0.0,
                    0,
                    0,
                    0.0,
                    0.0,
                    0
                ],
                "select_new_ys": [
                    "7 - 5 = 2 (left: 2 4 9)  \n9 / 1 = 9 (left: 2 4 9)\n9 + 2 = 11 (left: 4 11)\n11 - 4 = 7 (left: 7)\n",
                    "7 - 5 = 2 (left: 2 4 9)  \n9 / 1 = 9 (left: 2 4 9)\n9 + 4 = 13 (left: 2 13)\n2 + 13 = 15 (left: 15)\n",
                    "7 - 5 = 2 (left: 2 4 9)  \n9 / 1 = 9 (left: 2 4 9)\n9 + 4 = 13 (left: 2 13)\n13 - 2 = 11 (left: 11)\n"
                ]
            }
        ],
        "total_time": 168.59019684791565,
        "generate_time": 21.261441707611084,
        "evaluate_time": 147.31817722320557,
        "num_of_generations": 10,
        "num_of_evaluations": 82,
        "num_of_steps": 4,
        "idx": 910,
        "ys": [
            "7 - 5 = 2 (left: 2 4 9)  \n9 / 1 = 9 (left: 2 4 9)\n9 + 2 = 11 (left: 4 11)\n11 - 4 = 7 (left: 7)\n",
            "7 - 5 = 2 (left: 2 4 9)  \n9 / 1 = 9 (left: 2 4 9)\n9 + 4 = 13 (left: 2 13)\n2 + 13 = 15 (left: 15)\n",
            "7 - 5 = 2 (left: 2 4 9)  \n9 / 1 = 9 (left: 2 4 9)\n9 + 4 = 13 (left: 2 13)\n13 - 2 = 11 (left: 11)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 307256,
            "prompt_tokens": 214371,
            "cost": 3.6084875
        },
        "sum(accs)": 0,
        "cnt_avg": 3.333333333333333,
        "cnt_any": 6
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 2 8 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 2 = 3 (left: 3 8 13)  \n",
                    "2 + 8 = 10 (left: 1 10 13)  \n",
                    "8 + 13 = 21 (left: 1 2 21)  \n",
                    "1 + 13 = 14 (left: 2 8 14)  \n",
                    "2 * 8 = 16 (left: 1 13 16)  \n",
                    "13 - 1 = 12 (left: 2 8 12)  \n",
                    "13 - 2 = 11 (left: 1 8 11)  \n",
                    "13 - 8 = 5 (left: 1 2 5)  \n",
                    "8 - 1 = 7 (left: 2 7 13)  \n",
                    "8 - 2 = 6 (left: 1 6 13)  \n",
                    "2 - 1 = 1 (left: 1 8 13)  \n",
                    "8 / 2 = 4 (left: 1 4 13)  \n",
                    "8 / 1 = 8 (left: 2 13 8)  \n",
                    "13 / 1 = 13 (left: 2 8 13)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    40.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    20.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "8 + 13 = 21 (left: 1 2 21)  \n",
                    "2 - 1 = 1 (left: 1 8 13)  \n",
                    "13 - 1 = 12 (left: 2 8 12)  \n"
                ]
            },
            {
                "step": 1,
                "x": "1 2 8 13",
                "ys": [
                    "8 + 13 = 21 (left: 1 2 21)  \n",
                    "2 - 1 = 1 (left: 1 8 13)  \n",
                    "13 - 1 = 12 (left: 2 8 12)  \n"
                ],
                "new_ys": [
                    "8 + 13 = 21 (left: 1 2 21)  \n1 + 2 = 3 (left: 3 21)\n",
                    "8 + 13 = 21 (left: 1 2 21)  \n21 + 1 = 22 (left: 2 22)\n",
                    "8 + 13 = 21 (left: 1 2 21)  \n21 + 2 = 23 (left: 1 23)\n",
                    "8 + 13 = 21 (left: 1 2 21)  \n2 - 1 = 1 (left: 1 21)\n",
                    "8 + 13 = 21 (left: 1 2 21)  \n21 - 1 = 20 (left: 2 20)\n",
                    "8 + 13 = 21 (left: 1 2 21)  \n21 - 2 = 19 (left: 1 19)\n",
                    "8 + 13 = 21 (left: 1 2 21)  \n2 * 1 = 2 (left: 2 21)\n",
                    "8 + 13 = 21 (left: 1 2 21)  \n21 * 1 = 21 (left: 2 21)\n",
                    "8 + 13 = 21 (left: 1 2 21)  \n21 / 1 = 21 (left: 2 21)\n",
                    "8 + 13 = 21 (left: 1 2 21)  \n21 / 2 = 10.5 (left: 1 10.5)\n",
                    "2 - 1 = 1 (left: 1 8 13)  \n1 + 8 = 9 (left: 9 13)\n",
                    "2 - 1 = 1 (left: 1 8 13)  \n13 - 8 = 5 (left: 1 5)\n",
                    "2 - 1 = 1 (left: 1 8 13)  \n13 + 1 = 14 (left: 8 14)\n",
                    "2 - 1 = 1 (left: 1 8 13)  \n13 - 1 = 12 (left: 8 12)\n",
                    "2 - 1 = 1 (left: 1 8 13)  \n8 - 1 = 7 (left: 7 13)\n",
                    "2 - 1 = 1 (left: 1 8 13)  \n8 + 1 = 9 (left: 9 13)\n",
                    "13 - 1 = 12 (left: 2 8 12)  \n2 + 8 = 10 (left: 10 12)\n",
                    "13 - 1 = 12 (left: 2 8 12)  \n12 - 8 = 4 (left: 2 4)\n",
                    "13 - 1 = 12 (left: 2 8 12)  \n12 - 2 = 10 (left: 8 10)\n",
                    "13 - 1 = 12 (left: 2 8 12)  \n12 / 2 = 6 (left: 6 8)\n",
                    "13 - 1 = 12 (left: 2 8 12)  \n8 / 2 = 4 (left: 4 12)\n",
                    "13 - 1 = 12 (left: 2 8 12)  \n8 * 2 = 16 (left: 12 16)\n",
                    "13 - 1 = 12 (left: 2 8 12)  \n12 / 8 = 1.5 (left: 2 1.5)\n",
                    "13 - 1 = 12 (left: 2 8 12)  \n12 / 6 = 2 (left: 8 2)\n",
                    "13 - 1 = 12 (left: 2 8 12)  \n12 + 8 = 20 (left: 2 20)\n",
                    "13 - 1 = 12 (left: 2 8 12)  \n12 + 2 = 14 (left: 8 14)\n",
                    "13 - 1 = 12 (left: 2 8 12)  \n8 - 2 = 6 (left: 6 12)\n"
                ],
                "values": [
                    20.0,
                    40.0,
                    60.0,
                    0.0,
                    1.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.002,
                    1.0,
                    1.001,
                    0.0,
                    0.0,
                    0.0,
                    0.002,
                    0.0,
                    0.0,
                    0.0,
                    1.001,
                    0.0,
                    0.0,
                    1.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "8 + 13 = 21 (left: 1 2 21)  \n21 + 2 = 23 (left: 1 23)\n",
                    "8 + 13 = 21 (left: 1 2 21)  \n21 + 1 = 22 (left: 2 22)\n",
                    "8 + 13 = 21 (left: 1 2 21)  \n1 + 2 = 3 (left: 3 21)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 2 8 13",
                "ys": [
                    "8 + 13 = 21 (left: 1 2 21)  \n21 + 2 = 23 (left: 1 23)\n",
                    "8 + 13 = 21 (left: 1 2 21)  \n21 + 1 = 22 (left: 2 22)\n",
                    "8 + 13 = 21 (left: 1 2 21)  \n1 + 2 = 3 (left: 3 21)\n"
                ],
                "new_ys": [
                    "8 + 13 = 21 (left: 1 2 21)  \n21 + 2 = 23 (left: 1 23)\n23 + 1 = 24 (left: 24)  \n",
                    "8 + 13 = 21 (left: 1 2 21)  \n21 + 2 = 23 (left: 1 23)\n23 - 1 = 22 (left: 22)  \n",
                    "8 + 13 = 21 (left: 1 2 21)  \n21 + 2 = 23 (left: 1 23)\n23 * 1 = 23 (left: 23)  \n",
                    "8 + 13 = 21 (left: 1 2 21)  \n21 + 2 = 23 (left: 1 23)\n23 / 1 = 23 (left: 23)  \n",
                    "8 + 13 = 21 (left: 1 2 21)  \n21 + 2 = 23 (left: 1 23)\n1 + 23 = 24 (left: 24)  \n",
                    "8 + 13 = 21 (left: 1 2 21)  \n21 + 2 = 23 (left: 1 23)\n1 - 23 = -22 (left: -22)  \n",
                    "8 + 13 = 21 (left: 1 2 21)  \n21 + 2 = 23 (left: 1 23)\n1 * 23 = 23 (left: 23)  \n",
                    "8 + 13 = 21 (left: 1 2 21)  \n21 + 2 = 23 (left: 1 23)\n1 / 23 = 0.043478260869565216 (left: 0.043478260869565216)\n",
                    "8 + 13 = 21 (left: 1 2 21)  \n21 + 1 = 22 (left: 2 22)\n2 + 22 = 24 (left: 24)\n",
                    "8 + 13 = 21 (left: 1 2 21)  \n21 + 1 = 22 (left: 2 22)\n22 - 2 = 20 (left: 20)\n",
                    "8 + 13 = 21 (left: 1 2 21)  \n21 + 1 = 22 (left: 2 22)\n22 / 2 = 11 (left: 11)\n",
                    "8 + 13 = 21 (left: 1 2 21)  \n21 + 1 = 22 (left: 2 22)\n2 * 22 = 44 (left: 44)\n",
                    "8 + 13 = 21 (left: 1 2 21)  \n1 + 2 = 3 (left: 3 21)\n21 / 3 = 7 (left: 7)  \n",
                    "8 + 13 = 21 (left: 1 2 21)  \n1 + 2 = 3 (left: 3 21)\n21 - 3 = 18 (left: 18)  \n",
                    "8 + 13 = 21 (left: 1 2 21)  \n1 + 2 = 3 (left: 3 21)\n3 * 21 = 63 (left: 63)  \n",
                    "8 + 13 = 21 (left: 1 2 21)  \n1 + 2 = 3 (left: 3 21)\n21 + 3 = 24 (left: 24)\n"
                ],
                "values": [
                    60.0,
                    0.0,
                    0.0,
                    0.0,
                    60.0,
                    0.0,
                    0.0,
                    0.0,
                    60.0,
                    0,
                    0.0,
                    0,
                    0.001,
                    0.001,
                    0.0,
                    60.0
                ],
                "select_new_ys": [
                    "8 + 13 = 21 (left: 1 2 21)  \n21 + 2 = 23 (left: 1 23)\n23 + 1 = 24 (left: 24)  \n",
                    "8 + 13 = 21 (left: 1 2 21)  \n21 + 2 = 23 (left: 1 23)\n1 + 23 = 24 (left: 24)  \n",
                    "8 + 13 = 21 (left: 1 2 21)  \n21 + 1 = 22 (left: 2 22)\n2 + 22 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 2 8 13",
                "ys": [
                    "8 + 13 = 21 (left: 1 2 21)  \n21 + 2 = 23 (left: 1 23)\n23 + 1 = 24 (left: 24)  \n",
                    "8 + 13 = 21 (left: 1 2 21)  \n21 + 2 = 23 (left: 1 23)\n1 + 23 = 24 (left: 24)  \n",
                    "8 + 13 = 21 (left: 1 2 21)  \n21 + 1 = 22 (left: 2 22)\n2 + 22 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "8 + 13 = 21 (left: 1 2 21)  \n21 + 2 = 23 (left: 1 23)\n23 + 1 = 24 (left: 24)  \nAnswer: ((8 + 13) + 2) + 1 = 24\n",
                    "8 + 13 = 21 (left: 1 2 21)  \n21 + 2 = 23 (left: 1 23)\n1 + 23 = 24 (left: 24)  \nAnswer: ((8 + 13) + 2) + 1 = 24\n",
                    "8 + 13 = 21 (left: 1 2 21)  \n21 + 1 = 22 (left: 2 22)\n2 + 22 = 24 (left: 24)\nAnswer: ((8 + 13) + 1) + 2 = 24\n"
                ],
                "values": [
                    0.003,
                    0.003,
                    40.001
                ],
                "select_new_ys": [
                    "8 + 13 = 21 (left: 1 2 21)  \n21 + 1 = 22 (left: 2 22)\n2 + 22 = 24 (left: 24)\nAnswer: ((8 + 13) + 1) + 2 = 24\n",
                    "8 + 13 = 21 (left: 1 2 21)  \n21 + 2 = 23 (left: 1 23)\n23 + 1 = 24 (left: 24)  \nAnswer: ((8 + 13) + 2) + 1 = 24\n",
                    "8 + 13 = 21 (left: 1 2 21)  \n21 + 2 = 23 (left: 1 23)\n1 + 23 = 24 (left: 24)  \nAnswer: ((8 + 13) + 2) + 1 = 24\n"
                ]
            }
        ],
        "total_time": 135.4094750881195,
        "generate_time": 16.13463521003723,
        "evaluate_time": 119.26799702644348,
        "num_of_generations": 10,
        "num_of_evaluations": 60,
        "num_of_steps": 4,
        "idx": 911,
        "ys": [
            "8 + 13 = 21 (left: 1 2 21)  \n21 + 1 = 22 (left: 2 22)\n2 + 22 = 24 (left: 24)\nAnswer: ((8 + 13) + 1) + 2 = 24\n",
            "8 + 13 = 21 (left: 1 2 21)  \n21 + 2 = 23 (left: 1 23)\n23 + 1 = 24 (left: 24)  \nAnswer: ((8 + 13) + 2) + 1 = 24\n",
            "8 + 13 = 21 (left: 1 2 21)  \n21 + 2 = 23 (left: 1 23)\n1 + 23 = 24 (left: 24)  \nAnswer: ((8 + 13) + 2) + 1 = 24\n"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 328236,
            "prompt_tokens": 230997,
            "cost": 3.8598525
        },
        "sum(accs)": 3,
        "cnt_avg": 4.333333333333333,
        "cnt_any": 7
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 6 6 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 6 = 10 (left: 6 9 10)  \n",
                    "6 + 4 = 10 (left: 6 9 10)  \n",
                    "6 + 6 = 12 (left: 4 9 12)  \n",
                    "9 + 4 = 13 (left: 6 6 13)  \n",
                    "9 + 6 = 15 (left: 4 6 15)  \n",
                    "9 - 4 = 5 (left: 6 6 5)  \n",
                    "6 - 4 = 2 (left: 6 9 2)  \n",
                    "6 - 6 = 0 (left: 4 9 0)  \n",
                    "9 - 6 = 3 (left: 4 6 3)  \n",
                    "4 * 6 = 24 (left: 6 9 24)  \n",
                    "6 * 6 = 36 (left: 4 9 36)  \n",
                    "9 * 4 = 36 (left: 6 6 36)  \n",
                    "9 * 6 = 54 (left: 4 6 54)  \n",
                    "9 / 4 = 2.25 (left: 6 6 2.25)  \n",
                    "6 / 4 = 1.5 (left: 6 9 1.5)  \n",
                    "9 / 6 = 1.5 (left: 4 6 1.5)  \n",
                    "6 / 6 = 1 (left: 4 9 1)  \n"
                ],
                "values": [
                    1.0,
                    1.0,
                    0.0,
                    1.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "4 + 6 = 10 (left: 6 9 10)  \n",
                    "6 + 4 = 10 (left: 6 9 10)  \n",
                    "9 + 4 = 13 (left: 6 6 13)  \n"
                ]
            },
            {
                "step": 1,
                "x": "4 6 6 9",
                "ys": [
                    "4 + 6 = 10 (left: 6 9 10)  \n",
                    "6 + 4 = 10 (left: 6 9 10)  \n",
                    "9 + 4 = 13 (left: 6 6 13)  \n"
                ],
                "new_ys": [
                    "4 + 6 = 10 (left: 6 9 10)  \n9 - 6 = 3 (left: 3 10)\n",
                    "4 + 6 = 10 (left: 6 9 10)  \n10 - 6 = 4 (left: 4 9)\n",
                    "4 + 6 = 10 (left: 6 9 10)  \n10 - 9 = 1 (left: 1 6)\n",
                    "4 + 6 = 10 (left: 6 9 10)  \n9 + 6 = 15 (left: 10 15)\n",
                    "4 + 6 = 10 (left: 6 9 10)  \n10 + 6 = 16 (left: 9 16)\n",
                    "4 + 6 = 10 (left: 6 9 10)  \n10 + 9 = 19 (left: 6 19)\n",
                    "4 + 6 = 10 (left: 6 9 10)  \n9 * 6 = 54 (left: 10 54)\n",
                    "4 + 6 = 10 (left: 6 9 10)  \n10 * 6 = 60 (left: 9 60)\n",
                    "4 + 6 = 10 (left: 6 9 10)  \n10 * 9 = 90 (left: 6 90)\n",
                    "4 + 6 = 10 (left: 6 9 10)  \n9 / 6 = 1.5 (left: 1.5 10)\n",
                    "4 + 6 = 10 (left: 6 9 10)  \n10 / 6 = 1.6667 (left: 1.6667 9)\n",
                    "4 + 6 = 10 (left: 6 9 10)  \n10 / 9 = 1.1111 (left: 1.1111 6)\n",
                    "6 + 4 = 10 (left: 6 9 10)  \n6 + 9 = 15 (left: 10 15)\n",
                    "6 + 4 = 10 (left: 6 9 10)  \n9 + 10 = 19 (left: 6 19)\n",
                    "6 + 4 = 10 (left: 6 9 10)  \n10 - 6 = 4 (left: 4 9)\n",
                    "6 + 4 = 10 (left: 6 9 10)  \n10 - 9 = 1 (left: 6 1)\n",
                    "6 + 4 = 10 (left: 6 9 10)  \n9 - 6 = 3 (left: 3 10)\n",
                    "6 + 4 = 10 (left: 6 9 10)  \n10 / 5 = 2 (left: 6 9 2)\n",
                    "6 + 4 = 10 (left: 6 9 10)  \n9 / 3 = 3 (left: 6 10 3)\n",
                    "6 + 4 = 10 (left: 6 9 10)  \n6 * 9 = 54 (left: 10 54)\n",
                    "6 + 4 = 10 (left: 6 9 10)  \n6 * 10 = 60 (left: 9 60)\n",
                    "6 + 4 = 10 (left: 6 9 10)  \n9 * 10 = 90 (left: 6 90)\n",
                    "9 + 4 = 13 (left: 6 6 13)  \n6 + 6 = 12 (left: 12 13)\n",
                    "9 + 4 = 13 (left: 6 6 13)  \n13 - 6 = 7 (left: 6 7)\n",
                    "9 + 4 = 13 (left: 6 6 13)  \n13 + 6 = 19 (left: 6 19)\n",
                    "9 + 4 = 13 (left: 6 6 13)  \n6 * 6 = 36 (left: 13 36)\n",
                    "9 + 4 = 13 (left: 6 6 13)  \n13 - 6 = 7 (left: 6 7)\n",
                    "9 + 4 = 13 (left: 6 6 13)  \n6 / 6 = 1 (left: 1 13)\n",
                    "9 + 4 = 13 (left: 6 6 13)  \n13 / 6 = 2.166... (left: 6 2.166...)\n",
                    "9 + 4 = 13 (left: 6 6 13)  \n13 / 6 = 2.166... (left: 6 2.166...)\n"
                ],
                "values": [
                    0.0,
                    0.001,
                    0.001,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.001,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    0
                ],
                "select_new_ys": [
                    "4 + 6 = 10 (left: 6 9 10)  \n10 - 6 = 4 (left: 4 9)\n",
                    "4 + 6 = 10 (left: 6 9 10)  \n10 - 9 = 1 (left: 1 6)\n",
                    "4 + 6 = 10 (left: 6 9 10)  \n9 + 6 = 15 (left: 10 15)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 6 6 9",
                "ys": [
                    "4 + 6 = 10 (left: 6 9 10)  \n10 - 6 = 4 (left: 4 9)\n",
                    "4 + 6 = 10 (left: 6 9 10)  \n10 - 9 = 1 (left: 1 6)\n",
                    "4 + 6 = 10 (left: 6 9 10)  \n9 + 6 = 15 (left: 10 15)\n"
                ],
                "new_ys": [
                    "4 + 6 = 10 (left: 6 9 10)  \n10 - 6 = 4 (left: 4 9)\n9 - 4 = 5 (left: 5)\n",
                    "4 + 6 = 10 (left: 6 9 10)  \n10 - 6 = 4 (left: 4 9)\n9 / 4 = 2.25 (left: 2.25)\n",
                    "4 + 6 = 10 (left: 6 9 10)  \n10 - 6 = 4 (left: 4 9)\n4 + 9 = 13 (left: 13)\n",
                    "4 + 6 = 10 (left: 6 9 10)  \n10 - 6 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)\n",
                    "4 + 6 = 10 (left: 6 9 10)  \n10 - 6 = 4 (left: 4 9)\n9 / 9 = 1 (left: 1)\n",
                    "4 + 6 = 10 (left: 6 9 10)  \n10 - 6 = 4 (left: 4 9)\n9 - 9 = 0 (left: 0)\n",
                    "4 + 6 = 10 (left: 6 9 10)  \n10 - 6 = 4 (left: 4 9)\n4 - 9 = -5 (left: -5)\n",
                    "4 + 6 = 10 (left: 6 9 10)  \n10 - 6 = 4 (left: 4 9)\n\n",
                    "4 + 6 = 10 (left: 6 9 10)  \n10 - 9 = 1 (left: 1 6)\n1 + 6 = 7 (left: 7)\n",
                    "4 + 6 = 10 (left: 6 9 10)  \n10 - 9 = 1 (left: 1 6)\n6 - 1 = 5 (left: 5)\n",
                    "4 + 6 = 10 (left: 6 9 10)  \n10 - 9 = 1 (left: 1 6)\n6 / 1 = 6 (left: 6)\n",
                    "4 + 6 = 10 (left: 6 9 10)  \n10 - 9 = 1 (left: 1 6)\n1 * 6 = 6 (left: 6)\n",
                    "4 + 6 = 10 (left: 6 9 10)  \n9 + 6 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5)\n",
                    "4 + 6 = 10 (left: 6 9 10)  \n9 + 6 = 15 (left: 10 15)\n15 / 10 = 1.5 (left: 1.5)\n",
                    "4 + 6 = 10 (left: 6 9 10)  \n9 + 6 = 15 (left: 10 15)\n15 + 10 = 25 (left: 25)\n",
                    "4 + 6 = 10 (left: 6 9 10)  \n9 + 6 = 15 (left: 10 15)\n15 * 10 = 150 (left: 150)\n",
                    "4 + 6 = 10 (left: 6 9 10)  \n9 + 6 = 15 (left: 10 15)\n10 - 15 = -5 (left: -5)\n",
                    "4 + 6 = 10 (left: 6 9 10)  \n9 + 6 = 15 (left: 10 15)\n10 / 15 = 0.6667 (left: 0.6667)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.001,
                    0.0,
                    0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "4 + 6 = 10 (left: 6 9 10)  \n10 - 6 = 4 (left: 4 9)\n\n",
                    "4 + 6 = 10 (left: 6 9 10)  \n10 - 9 = 1 (left: 1 6)\n1 + 6 = 7 (left: 7)\n",
                    "4 + 6 = 10 (left: 6 9 10)  \n9 + 6 = 15 (left: 10 15)\n15 * 10 = 150 (left: 150)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 6 6 9",
                "ys": [
                    "4 + 6 = 10 (left: 6 9 10)  \n10 - 6 = 4 (left: 4 9)\n\n",
                    "4 + 6 = 10 (left: 6 9 10)  \n10 - 9 = 1 (left: 1 6)\n1 + 6 = 7 (left: 7)\n",
                    "4 + 6 = 10 (left: 6 9 10)  \n9 + 6 = 15 (left: 10 15)\n15 * 10 = 150 (left: 150)\n"
                ],
                "new_ys": [
                    "4 + 6 = 10 (left: 6 9 10)  \n10 - 6 = 4 (left: 4 9)\n\n4 + 9 = 13 (left: 13)\n",
                    "4 + 6 = 10 (left: 6 9 10)  \n10 - 6 = 4 (left: 4 9)\n\n9 - 4 = 5 (left: 5)\n",
                    "4 + 6 = 10 (left: 6 9 10)  \n10 - 6 = 4 (left: 4 9)\n\n9 / 4 = 2.25 (left: 2.25)\n",
                    "4 + 6 = 10 (left: 6 9 10)  \n10 - 6 = 4 (left: 4 9)\n\n4 * 9 = 36 (left: 36)\n",
                    "4 + 6 = 10 (left: 6 9 10)  \n10 - 6 = 4 (left: 4 9)\n\n9 / 4 = 2.25 (left: 2.25)\n",
                    "4 + 6 = 10 (left: 6 9 10)  \n10 - 6 = 4 (left: 4 9)\n\n4 - 9 = -5 (left: -5)\n",
                    "4 + 6 = 10 (left: 6 9 10)  \n10 - 9 = 1 (left: 1 6)\n1 + 6 = 7 (left: 7)\nNo possible next steps.\n",
                    "4 + 6 = 10 (left: 6 9 10)  \n9 + 6 = 15 (left: 10 15)\n15 * 10 = 150 (left: 150)\nNo possible next steps.\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "4 + 6 = 10 (left: 6 9 10)  \n10 - 6 = 4 (left: 4 9)\n\n4 + 9 = 13 (left: 13)\n",
                    "4 + 6 = 10 (left: 6 9 10)  \n10 - 6 = 4 (left: 4 9)\n\n9 - 4 = 5 (left: 5)\n",
                    "4 + 6 = 10 (left: 6 9 10)  \n10 - 6 = 4 (left: 4 9)\n\n9 / 4 = 2.25 (left: 2.25)\n"
                ]
            }
        ],
        "total_time": 121.44745397567749,
        "generate_time": 21.15179705619812,
        "evaluate_time": 100.15428495407104,
        "num_of_generations": 10,
        "num_of_evaluations": 73,
        "num_of_steps": 4,
        "idx": 912,
        "ys": [
            "4 + 6 = 10 (left: 6 9 10)  \n10 - 6 = 4 (left: 4 9)\n\n4 + 9 = 13 (left: 13)\n",
            "4 + 6 = 10 (left: 6 9 10)  \n10 - 6 = 4 (left: 4 9)\n\n9 - 4 = 5 (left: 5)\n",
            "4 + 6 = 10 (left: 6 9 10)  \n10 - 6 = 4 (left: 4 9)\n\n9 / 4 = 2.25 (left: 2.25)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 348135,
            "prompt_tokens": 243526,
            "cost": 4.090165
        },
        "sum(accs)": 0,
        "cnt_avg": 4.333333333333333,
        "cnt_any": 7
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 4 4 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 4 = 5 (left: 4 5 8)  \n",
                    "1 * 4 = 4 (left: 4 4 8)  \n",
                    "4 + 4 = 8 (left: 1 8 8)  \n",
                    "4 * 4 = 16 (left: 1 8 16)  \n",
                    "8 + 1 = 9 (left: 4 4 9)  \n",
                    "8 - 1 = 7 (left: 4 4 7)  \n",
                    "8 - 4 = 4 (left: 1 4 4)  \n",
                    "8 / 4 = 2 (left: 1 4 2)  \n",
                    "4 - 1 = 3 (left: 4 3 8)  \n",
                    "4 / 1 = 4 (left: 4 4 8)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "8 + 1 = 9 (left: 4 4 9)  \n",
                    "8 - 4 = 4 (left: 1 4 4)  \n",
                    "1 + 4 = 5 (left: 4 5 8)  \n"
                ]
            },
            {
                "step": 1,
                "x": "1 4 4 8",
                "ys": [
                    "8 + 1 = 9 (left: 4 4 9)  \n",
                    "8 - 4 = 4 (left: 1 4 4)  \n",
                    "1 + 4 = 5 (left: 4 5 8)  \n"
                ],
                "new_ys": [
                    "8 + 1 = 9 (left: 4 4 9)  \n4 + 4 = 8 (left: 8 9)\n",
                    "8 + 1 = 9 (left: 4 4 9)  \n4 * 4 = 16 (left: 9 16)\n",
                    "8 + 1 = 9 (left: 4 4 9)  \n9 - 4 = 5 (left: 4 5)\n",
                    "8 + 1 = 9 (left: 4 4 9)  \n9 / 4 = 2.25 (left: 4 2.25)\n",
                    "8 + 1 = 9 (left: 4 4 9)  \n9 + 4 = 13 (left: 4 13)\n",
                    "8 + 1 = 9 (left: 4 4 9)  \n9 - 4 = 5 (left: 4 5)\n",
                    "8 - 4 = 4 (left: 1 4 4)  \n1 + 4 = 5 (left: 4 5)\n",
                    "8 - 4 = 4 (left: 1 4 4)  \n4 + 1 = 5 (left: 4 5)\n",
                    "8 - 4 = 4 (left: 1 4 4)  \n4 + 4 = 8 (left: 1 8)\n",
                    "8 - 4 = 4 (left: 1 4 4)  \n4 - 1 = 3 (left: 4 3)\n",
                    "8 - 4 = 4 (left: 1 4 4)  \n4 - 4 = 0 (left: 1 0)\n",
                    "8 - 4 = 4 (left: 1 4 4)  \n4 - 1 = 3 (left: 4 3)\n",
                    "8 - 4 = 4 (left: 1 4 4)  \n4 / 1 = 4 (left: 4 4)\n",
                    "8 - 4 = 4 (left: 1 4 4)  \n4 / 4 = 1 (left: 1 1)\n",
                    "8 - 4 = 4 (left: 1 4 4)  \n4 / 1 = 4 (left: 4 4)\n",
                    "8 - 4 = 4 (left: 1 4 4)  \n4 * 1 = 4 (left: 4 4)\n",
                    "8 - 4 = 4 (left: 1 4 4)  \n4 * 1 = 4 (left: 4 4)\n",
                    "1 + 4 = 5 (left: 4 5 8)  \n4 + 5 = 9 (left: 8 9)\n",
                    "1 + 4 = 5 (left: 4 5 8)  \n5 + 8 = 13 (left: 4 13)\n",
                    "1 + 4 = 5 (left: 4 5 8)  \n8 + 4 = 12 (left: 5 12)\n",
                    "1 + 4 = 5 (left: 4 5 8)  \n4 * 5 = 20 (left: 8 20)\n",
                    "1 + 4 = 5 (left: 4 5 8)  \n5 * 8 = 40 (left: 4 40)\n",
                    "1 + 4 = 5 (left: 4 5 8)  \n8 * 4 = 32 (left: 5 32)\n",
                    "1 + 4 = 5 (left: 4 5 8)  \n5 - 4 = 1 (left: 8 1)\n",
                    "1 + 4 = 5 (left: 4 5 8)  \n8 - 4 = 4 (left: 5 4)\n",
                    "1 + 4 = 5 (left: 4 5 8)  \n8 - 5 = 3 (left: 4 3)\n",
                    "1 + 4 = 5 (left: 4 5 8)  \n5 / 4 = 1.25 (left: 8 1.25)\n",
                    "1 + 4 = 5 (left: 4 5 8)  \n8 / 4 = 2 (left: 5 2)\n",
                    "1 + 4 = 5 (left: 4 5 8)  \n8 / 5 = 1.6 (left: 4 1.6)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.002,
                    0,
                    0.001,
                    0.001,
                    0,
                    0.001,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.001,
                    0.0
                ],
                "select_new_ys": [
                    "8 - 4 = 4 (left: 1 4 4)  \n4 - 4 = 0 (left: 1 0)\n",
                    "8 - 4 = 4 (left: 1 4 4)  \n4 / 1 = 4 (left: 4 4)\n",
                    "8 - 4 = 4 (left: 1 4 4)  \n4 / 4 = 1 (left: 1 1)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 4 4 8",
                "ys": [
                    "8 - 4 = 4 (left: 1 4 4)  \n4 - 4 = 0 (left: 1 0)\n",
                    "8 - 4 = 4 (left: 1 4 4)  \n4 / 1 = 4 (left: 4 4)\n",
                    "8 - 4 = 4 (left: 1 4 4)  \n4 / 4 = 1 (left: 1 1)\n"
                ],
                "new_ys": [
                    "8 - 4 = 4 (left: 1 4 4)  \n4 - 4 = 0 (left: 1 0)\n1 + 0 = 1 (left: 1)\n",
                    "8 - 4 = 4 (left: 1 4 4)  \n4 - 4 = 0 (left: 1 0)\n1 - 0 = 1 (left: 1)\n",
                    "8 - 4 = 4 (left: 1 4 4)  \n4 - 4 = 0 (left: 1 0)\n1 * 0 = 0 (left: 0)\n",
                    "8 - 4 = 4 (left: 1 4 4)  \n4 - 4 = 0 (left: 1 0)\n0 - 1 = -1 (left: -1)\n",
                    "8 - 4 = 4 (left: 1 4 4)  \n4 - 4 = 0 (left: 1 0)\n0 / 1 = 0 (left: 0)\n",
                    "8 - 4 = 4 (left: 1 4 4)  \n4 / 1 = 4 (left: 4 4)\n4 + 4 = 8 (left: 8)\n",
                    "8 - 4 = 4 (left: 1 4 4)  \n4 / 1 = 4 (left: 4 4)\n4 * 4 = 16 (left: 16)\n",
                    "8 - 4 = 4 (left: 1 4 4)  \n4 / 1 = 4 (left: 4 4)\n4 / 4 = 1 (left: 1)\n",
                    "8 - 4 = 4 (left: 1 4 4)  \n4 / 1 = 4 (left: 4 4)\n4 - 4 = 0 (left: 0)\n",
                    "8 - 4 = 4 (left: 1 4 4)  \n4 / 4 = 1 (left: 1 1)\n1 + 1 = 2 (left: 2)  \n",
                    "8 - 4 = 4 (left: 1 4 4)  \n4 / 4 = 1 (left: 1 1)\n1 * 1 = 1 (left: 1)  \n",
                    "8 - 4 = 4 (left: 1 4 4)  \n4 / 4 = 1 (left: 1 1)\n1 / 1 = 1 (left: 1)  \n",
                    "8 - 4 = 4 (left: 1 4 4)  \n4 / 4 = 1 (left: 1 1)\n1 - 1 = 0 (left: 0)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "8 - 4 = 4 (left: 1 4 4)  \n4 / 1 = 4 (left: 4 4)\n4 + 4 = 8 (left: 8)\n",
                    "8 - 4 = 4 (left: 1 4 4)  \n4 - 4 = 0 (left: 1 0)\n1 + 0 = 1 (left: 1)\n",
                    "8 - 4 = 4 (left: 1 4 4)  \n4 - 4 = 0 (left: 1 0)\n1 - 0 = 1 (left: 1)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 4 4 8",
                "ys": [
                    "8 - 4 = 4 (left: 1 4 4)  \n4 / 1 = 4 (left: 4 4)\n4 + 4 = 8 (left: 8)\n",
                    "8 - 4 = 4 (left: 1 4 4)  \n4 - 4 = 0 (left: 1 0)\n1 + 0 = 1 (left: 1)\n",
                    "8 - 4 = 4 (left: 1 4 4)  \n4 - 4 = 0 (left: 1 0)\n1 - 0 = 1 (left: 1)\n"
                ],
                "new_ys": [
                    "8 - 4 = 4 (left: 1 4 4)  \n4 / 1 = 4 (left: 4 4)\n4 + 4 = 8 (left: 8)\n8 + 8 = 16 (left: 16)\n",
                    "8 - 4 = 4 (left: 1 4 4)  \n4 / 1 = 4 (left: 4 4)\n4 + 4 = 8 (left: 8)\n8 - 8 = 0 (left: 0)\n",
                    "8 - 4 = 4 (left: 1 4 4)  \n4 / 1 = 4 (left: 4 4)\n4 + 4 = 8 (left: 8)\n8 * 8 = 64 (left: 64)\n",
                    "8 - 4 = 4 (left: 1 4 4)  \n4 / 1 = 4 (left: 4 4)\n4 + 4 = 8 (left: 8)\n8 / 8 = 1 (left: 1)\n",
                    "8 - 4 = 4 (left: 1 4 4)  \n4 - 4 = 0 (left: 1 0)\n1 + 0 = 1 (left: 1)\nNo possible next steps.\n",
                    "8 - 4 = 4 (left: 1 4 4)  \n4 - 4 = 0 (left: 1 0)\n1 - 0 = 1 (left: 1)\nNo operations possible.\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0,
                    0.0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "8 - 4 = 4 (left: 1 4 4)  \n4 / 1 = 4 (left: 4 4)\n4 + 4 = 8 (left: 8)\n8 + 8 = 16 (left: 16)\n",
                    "8 - 4 = 4 (left: 1 4 4)  \n4 / 1 = 4 (left: 4 4)\n4 + 4 = 8 (left: 8)\n8 - 8 = 0 (left: 0)\n",
                    "8 - 4 = 4 (left: 1 4 4)  \n4 / 1 = 4 (left: 4 4)\n4 + 4 = 8 (left: 8)\n8 * 8 = 64 (left: 64)\n"
                ]
            }
        ],
        "total_time": 104.75253891944885,
        "generate_time": 14.224828004837036,
        "evaluate_time": 90.52358365058899,
        "num_of_generations": 10,
        "num_of_evaluations": 58,
        "num_of_steps": 4,
        "idx": 913,
        "ys": [
            "8 - 4 = 4 (left: 1 4 4)  \n4 / 1 = 4 (left: 4 4)\n4 + 4 = 8 (left: 8)\n8 + 8 = 16 (left: 16)\n",
            "8 - 4 = 4 (left: 1 4 4)  \n4 / 1 = 4 (left: 4 4)\n4 + 4 = 8 (left: 8)\n8 - 8 = 0 (left: 0)\n",
            "8 - 4 = 4 (left: 1 4 4)  \n4 / 1 = 4 (left: 4 4)\n4 + 4 = 8 (left: 8)\n8 * 8 = 64 (left: 64)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 360697,
            "prompt_tokens": 253771,
            "cost": 4.2413975
        },
        "sum(accs)": 0,
        "cnt_avg": 4.333333333333333,
        "cnt_any": 7
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 5 10 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 5 = 6 (left: 6 10 11)  \n",
                    "1 + 10 = 11 (left: 5 11 11)  \n",
                    "1 + 11 = 12 (left: 5 10 12)  \n",
                    "5 + 10 = 15 (left: 1 11 15)  \n",
                    "5 + 11 = 16 (left: 1 10 16)  \n",
                    "10 + 11 = 21 (left: 1 5 21)  \n",
                    "5 - 1 = 4 (left: 4 10 11)  \n",
                    "10 - 1 = 9 (left: 5 9 11)  \n",
                    "11 - 1 = 10 (left: 5 10 10)  \n",
                    "10 - 5 = 5 (left: 1 5 11)  \n",
                    "11 - 5 = 6 (left: 1 6 10)  \n",
                    "11 - 10 = 1 (left: 1 1 5)  \n",
                    "5 * 1 = 5 (left: 5 10 11)  \n",
                    "10 * 1 = 10 (left: 5 10 11)  \n",
                    "11 * 1 = 11 (left: 5 10 11)  \n",
                    "5 * 10 = 50 (left: 1 11 50)  \n",
                    "5 * 11 = 55 (left: 1 10 55)  \n",
                    "10 * 11 = 110 (left: 1 5 110)  \n",
                    "5 / 1 = 5 (left: 5 10 11)  \n",
                    "10 / 1 = 10 (left: 5 10 11)  \n",
                    "11 / 1 = 11 (left: 5 10 11)  \n",
                    "10 / 5 = 2 (left: 1 2 11)  \n",
                    "11 / 5 = 2.2 (left: 1 10 2.2)  \n",
                    "11 / 10 = 1.1 (left: 1 5 1.1)\n"
                ],
                "values": [
                    1.0,
                    0.001,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1.0,
                    0.0,
                    0.003,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "1 + 5 = 6 (left: 6 10 11)  \n",
                    "10 - 5 = 5 (left: 1 5 11)  \n",
                    "11 - 10 = 1 (left: 1 1 5)  \n"
                ]
            },
            {
                "step": 1,
                "x": "1 5 10 11",
                "ys": [
                    "1 + 5 = 6 (left: 6 10 11)  \n",
                    "10 - 5 = 5 (left: 1 5 11)  \n",
                    "11 - 10 = 1 (left: 1 1 5)  \n"
                ],
                "new_ys": [
                    "1 + 5 = 6 (left: 6 10 11)  \n6 + 10 = 16 (left: 11 16)\n",
                    "1 + 5 = 6 (left: 6 10 11)  \n10 / 5 = 2 (left: 6 11 2)\n",
                    "1 + 5 = 6 (left: 6 10 11)  \n11 + 6 = 17 (left: 10 17)\n",
                    "1 + 5 = 6 (left: 6 10 11)  \n6 * 10 = 60 (left: 11 60)\n",
                    "1 + 5 = 6 (left: 6 10 11)  \n10 - 6 = 4 (left: 11 4)\n",
                    "1 + 5 = 6 (left: 6 10 11)  \n11 - 6 = 5 (left: 10 5)\n",
                    "1 + 5 = 6 (left: 6 10 11)  \n11 / 11 = 1 (left: 6 10 1)\n",
                    "1 + 5 = 6 (left: 6 10 11)  \n11 - 10 = 1 (left: 6 1)\n",
                    "10 - 5 = 5 (left: 1 5 11)  \n1 + 5 = 6 (left: 6 11)\n",
                    "10 - 5 = 5 (left: 1 5 11)  \n5 + 1 = 6 (left: 6 11)\n",
                    "10 - 5 = 5 (left: 1 5 11)  \n11 + 1 = 12 (left: 5 12)\n",
                    "10 - 5 = 5 (left: 1 5 11)  \n11 + 5 = 16 (left: 1 16)\n",
                    "10 - 5 = 5 (left: 1 5 11)  \n5 - 1 = 4 (left: 4 11)\n",
                    "10 - 5 = 5 (left: 1 5 11)  \n11 - 1 = 10 (left: 5 10)\n",
                    "10 - 5 = 5 (left: 1 5 11)  \n11 - 5 = 6 (left: 1 6)\n",
                    "10 - 5 = 5 (left: 1 5 11)  \n5 * 1 = 5 (left: 5 11)\n",
                    "10 - 5 = 5 (left: 1 5 11)  \n11 * 1 = 11 (left: 5 11)\n",
                    "10 - 5 = 5 (left: 1 5 11)  \n11 / 1 = 11 (left: 5 11)\n",
                    "10 - 5 = 5 (left: 1 5 11)  \n5 / 1 = 5 (left: 5 11)\n",
                    "11 - 10 = 1 (left: 1 1 5)  \n1 + 1 = 2 (left: 2 5)\n",
                    "11 - 10 = 1 (left: 1 1 5)  \n5 + 1 = 6 (left: 1 6)\n",
                    "11 - 10 = 1 (left: 1 1 5)  \n5 - 1 = 4 (left: 1 4)\n",
                    "11 - 10 = 1 (left: 1 1 5)  \n5 - 1 = 4 (left: 1 4)\n",
                    "11 - 10 = 1 (left: 1 1 5)  \n5 / 1 = 5 (left: 1 5)\n",
                    "11 - 10 = 1 (left: 1 1 5)  \n1 * 1 = 1 (left: 1 5)\n",
                    "11 - 10 = 1 (left: 1 1 5)  \n1 + 5 = 6 (left: 1 6)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.001,
                    0.001,
                    0,
                    0.002,
                    0.002,
                    0.001
                ],
                "select_new_ys": [
                    "11 - 10 = 1 (left: 1 1 5)  \n5 / 1 = 5 (left: 1 5)\n",
                    "11 - 10 = 1 (left: 1 1 5)  \n1 * 1 = 1 (left: 1 5)\n",
                    "1 + 5 = 6 (left: 6 10 11)  \n11 - 10 = 1 (left: 6 1)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 5 10 11",
                "ys": [
                    "11 - 10 = 1 (left: 1 1 5)  \n5 / 1 = 5 (left: 1 5)\n",
                    "11 - 10 = 1 (left: 1 1 5)  \n1 * 1 = 1 (left: 1 5)\n",
                    "1 + 5 = 6 (left: 6 10 11)  \n11 - 10 = 1 (left: 6 1)\n"
                ],
                "new_ys": [
                    "11 - 10 = 1 (left: 1 1 5)  \n5 / 1 = 5 (left: 1 5)\n1 + 5 = 6 (left: 6)  \n",
                    "11 - 10 = 1 (left: 1 1 5)  \n5 / 1 = 5 (left: 1 5)\n5 - 1 = 4 (left: 4)  \n",
                    "11 - 10 = 1 (left: 1 1 5)  \n5 / 1 = 5 (left: 1 5)\n5 / 1 = 5 (left: 5)  \n",
                    "11 - 10 = 1 (left: 1 1 5)  \n5 / 1 = 5 (left: 1 5)\n1 * 5 = 5 (left: 5)\n",
                    "11 - 10 = 1 (left: 1 1 5)  \n1 * 1 = 1 (left: 1 5)\n5 + 1 = 6 (left: 6)\n",
                    "11 - 10 = 1 (left: 1 1 5)  \n1 * 1 = 1 (left: 1 5)\n5 - 1 = 4 (left: 4)\n",
                    "11 - 10 = 1 (left: 1 1 5)  \n1 * 1 = 1 (left: 1 5)\n5 * 1 = 5 (left: 5)\n",
                    "11 - 10 = 1 (left: 1 1 5)  \n1 * 1 = 1 (left: 1 5)\n5 / 1 = 5 (left: 5)\n",
                    "1 + 5 = 6 (left: 6 10 11)  \n11 - 10 = 1 (left: 6 1)\n6 + 1 = 7 (left: 7)\n",
                    "1 + 5 = 6 (left: 6 10 11)  \n11 - 10 = 1 (left: 6 1)\n6 - 1 = 5 (left: 5)\n",
                    "1 + 5 = 6 (left: 6 10 11)  \n11 - 10 = 1 (left: 6 1)\n6 * 1 = 6 (left: 6)\n",
                    "1 + 5 = 6 (left: 6 10 11)  \n11 - 10 = 1 (left: 6 1)\n6 / 1 = 6 (left: 6)\n",
                    "1 + 5 = 6 (left: 6 10 11)  \n11 - 10 = 1 (left: 6 1)\n1 / 6 = 0.1667 (left: 0.1667)\n"
                ],
                "values": [
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0,
                    0,
                    0.0
                ],
                "select_new_ys": [
                    "1 + 5 = 6 (left: 6 10 11)  \n11 - 10 = 1 (left: 6 1)\n6 + 1 = 7 (left: 7)\n",
                    "11 - 10 = 1 (left: 1 1 5)  \n5 / 1 = 5 (left: 1 5)\n1 + 5 = 6 (left: 6)  \n",
                    "11 - 10 = 1 (left: 1 1 5)  \n5 / 1 = 5 (left: 1 5)\n5 - 1 = 4 (left: 4)  \n"
                ]
            },
            {
                "step": 3,
                "x": "1 5 10 11",
                "ys": [
                    "1 + 5 = 6 (left: 6 10 11)  \n11 - 10 = 1 (left: 6 1)\n6 + 1 = 7 (left: 7)\n",
                    "11 - 10 = 1 (left: 1 1 5)  \n5 / 1 = 5 (left: 1 5)\n1 + 5 = 6 (left: 6)  \n",
                    "11 - 10 = 1 (left: 1 1 5)  \n5 / 1 = 5 (left: 1 5)\n5 - 1 = 4 (left: 4)  \n"
                ],
                "new_ys": [
                    "1 + 5 = 6 (left: 6 10 11)  \n11 - 10 = 1 (left: 6 1)\n6 + 1 = 7 (left: 7)\nNo possible next steps.\n",
                    "11 - 10 = 1 (left: 1 1 5)  \n5 / 1 = 5 (left: 1 5)\n1 + 5 = 6 (left: 6)  \nNo possible next steps.\n",
                    "11 - 10 = 1 (left: 1 1 5)  \n5 / 1 = 5 (left: 1 5)\n5 - 1 = 4 (left: 4)  \nNo possible next steps.\n"
                ],
                "values": [
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "1 + 5 = 6 (left: 6 10 11)  \n11 - 10 = 1 (left: 6 1)\n6 + 1 = 7 (left: 7)\nNo possible next steps.\n",
                    "11 - 10 = 1 (left: 1 1 5)  \n5 / 1 = 5 (left: 1 5)\n1 + 5 = 6 (left: 6)  \nNo possible next steps.\n",
                    "11 - 10 = 1 (left: 1 1 5)  \n5 / 1 = 5 (left: 1 5)\n5 - 1 = 4 (left: 4)  \nNo possible next steps.\n"
                ]
            }
        ],
        "total_time": 118.62315320968628,
        "generate_time": 17.756333351135254,
        "evaluate_time": 100.85278606414795,
        "num_of_generations": 10,
        "num_of_evaluations": 66,
        "num_of_steps": 4,
        "idx": 914,
        "ys": [
            "1 + 5 = 6 (left: 6 10 11)  \n11 - 10 = 1 (left: 6 1)\n6 + 1 = 7 (left: 7)\nNo possible next steps.\n",
            "11 - 10 = 1 (left: 1 1 5)  \n5 / 1 = 5 (left: 1 5)\n1 + 5 = 6 (left: 6)  \nNo possible next steps.\n",
            "11 - 10 = 1 (left: 1 1 5)  \n5 / 1 = 5 (left: 1 5)\n5 - 1 = 4 (left: 4)  \nNo possible next steps.\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 376619,
            "prompt_tokens": 265201,
            "cost": 4.4291925
        },
        "sum(accs)": 0,
        "cnt_avg": 4.333333333333333,
        "cnt_any": 7
    }
]